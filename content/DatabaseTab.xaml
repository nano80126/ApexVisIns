<StackPanel x:Class="ApexVisIns.content.DatabaseTab"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:app="clr-namespace:ApexVisIns"
            xmlns:local="clr-namespace:ApexVisIns.content"
            xmlns:pd="clr-namespace:ApexVisIns.Product"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            mc:Ignorable="d" 
            Loaded="StackPanel_Loaded"
            Unloaded="StackPanel_Unloaded"
            d:DesignHeight="900" d:DesignWidth="1600"
            UseLayoutRounding="True"
            Orientation="Vertical">
    <Grid>
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <!--900 - 120-->
                <Setter Property="Height" Value="780"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}" Value="Maximized">
                        <!--1080 - 120-->
                        <Setter Property="Height" Value="960"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.ColumnDefinitions>
            <!--1st-->
            <ColumnDefinition Width="auto"/>
            <!--Separator-->
            <ColumnDefinition Width="auto"/>
            <!--2nd-->
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <!--#region Column 1 -->
        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Vertical" Width="300" VerticalAlignment="Top" Background="{x:Null}">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOutlinedButton}">

                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ColorTeal}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <materialDesign:Card Style="{StaticResource PanelTopCard}" Padding="6 8" VerticalAlignment="Top" Background="Linen">
                <DockPanel Background="Transparent" Margin="2 0" MouseDown="DockPanel_MouseDown">
                    <DockPanel.Resources>
                        <!--#region Calender Style -->
                        <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource ColorSuccess}" />
                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
                        </Style>
                        <!--//-->
                        <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
                            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource ColorSuccess}" />
                            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
                        </Style>
                        <!--#endregion-->
                        <Style x:Key="CustomTimerPicker" TargetType="materialDesign:TimePicker" BasedOn="{StaticResource MaterialDesignOutlinedTimePicker}">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="Is24Hours" Value="True"/>
                            <Setter Property="IsHeaderVisible" Value="False"/>
                            <Setter Property="Padding" Value="10 3"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                        <!--//-->
                    </DockPanel.Resources>

                    <DockPanel x:Name="CalenderHeader" DockPanel.Dock="Top">
                        <materialDesign:PackIcon Kind="CalendarOutline" Width="30" Height="26"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Bottom" FontSize="18" Text="日期時間查詢" Style="{StaticResource MaterialDesignSubtitle1TextBlock}"/>
                    </DockPanel>
                    <!--//-->
                    <Separator DockPanel.Dock="Top" Margin="0 8"/>
                    <!--//-->
                    <Calendar x:Name="DatePicker" Margin="0 0" DockPanel.Dock="Top"
                              Background="{StaticResource ColorCyanTransparent}" Foreground="{StaticResource ColorSecondary}" FontSize="20"
                              materialDesign:CalendarAssist.IsHeaderVisible="False"
                              CalendarDayButtonStyle="{StaticResource CustomCalendarDayButton}" 
                              CalendarButtonStyle="{StaticResource CustomCalendarButton}" />

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style x:Key="TimePickComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                                <Setter Property="Margin" Value="0 8"/>
                                <Setter Property="Width" Value="120"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="MaxDropDownHeight" Value="200"/>
                                <!--<Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Setter Property="BorderThickness" Value="3"/>
                                    </Trigger>
                                </Style.Triggers>-->
                            </Style>
                        </StackPanel.Resources>

                        <ComboBox x:Name="StartTimePicker" DockPanel.Dock="Top" Padding="8 3"
                                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                  materialDesign:TextFieldAssist.PrefixText="S "
                                  Style="{StaticResource TimePickComboBox}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Width="90" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <!--//-->
                        </ComboBox>
                        <!--//-->
                        <materialDesign:PackIcon Kind="Tilde" Width="20" Height="16" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="8 0"/>
                        <!--//-->
                        <ComboBox x:Name="EndTimePicker" DockPanel.Dock="Top" Padding="8 3"
                                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                  materialDesign:TextFieldAssist.PrefixText="E " 
                                  Style="{StaticResource TimePickComboBox}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Width="90" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <!--//-->
                        </ComboBox>
                    </StackPanel>

                    <Button DockPanel.Dock="Bottom" Margin="0 8 0 0" Height="24" Click="DateTimeFindBtn_Click">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Search" Width="24" Height="20" VerticalAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" Text="查詢"/>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </materialDesign:Card>

            <materialDesign:Card Style="{StaticResource PanelTopCard}" Padding="6 8" VerticalAlignment="Top" Background="Linen">
                <DockPanel Background="Transparent" Margin="2 0" MouseDown="DockPanel_MouseDown">
                    <DockPanel x:Name="LotNumberHeader" DockPanel.Dock="Top">
                        <materialDesign:PackIcon Kind="Barcode" Width="30" Height="26"/>
                        <TextBlock FontWeight="Bold" VerticalAlignment="Bottom" FontSize="18" Text="批號查詢" Style="{StaticResource MaterialDesignSubtitle1TextBlock}"/>
                    </DockPanel>
                    <!--//-->
                    <Separator DockPanel.Dock="Top" Margin="0 8"/>
                    <!--//-->

                    <TextBox x:Name="LotNumberText" DockPanel.Dock="Top" Padding="8 3" 
                             materialDesign:HintAssist.Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=materialDesign:Card,AncestorLevel=1}}"
                             materialDesign:HintAssist.Hint="批號" TextAlignment="Center" FontWeight="SemiBold"
                             Style="{StaticResource MaterialDesignOutlinedTextBox}"/>

                    <Button DockPanel.Dock="Bottom" Margin="0 8 0 0" Height="24" Click="LotNumberFindBtn_Click">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Search" Width="24" Height="20" VerticalAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" Text="查詢"/>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </materialDesign:Card>
        </StackPanel>
        <!--#endregion-->

        <!--#region Column 2, Separator -->
        <Separator Grid.Column="1" Grid.RowSpan="100" Width="1" Margin="0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                   Background="{StaticResource ColorSecondaryTransparent}"/>
        <!--#endregion-->

        <!--#region Column 3 -->
        <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Vertical" Background="{x:Null}">
            <materialDesign:Card x:Name="HistoryCard" Style="{StaticResource PanelTopCard}" Background="WhiteSmoke" Padding="6 8"
                                 VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <DockPanel Background="Transparent" Margin="2 0" MouseDown="DockPanel_MouseDown">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Right">
                        <ComboBox x:Name="DefectFilterCombobox" DockPanel.Dock="Top" HorizontalAlignment="Right" Padding="8 3" Cursor="Hand" MinWidth="180" 
                                  materialDesign:HintAssist.Hint="過濾條件"
                                  Style="{StaticResource MaterialDesignOutlinedComboBox}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--//-->
                        <Button Margin="12 0 0 0" Height="24" Style="{StaticResource MaterialDesignOutlinedButton}" BorderBrush="{StaticResource ColorInfo}"
                                Foreground="{StaticResource ColorInfo}" >
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="FilterOutline" Width="24" Height="20" VerticalAlignment="Center"/>
                                <TextBlock VerticalAlignment="Center" Text="過濾"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <!--//-->
                    <Separator DockPanel.Dock="Top" Margin="0 10" />
                    <!--//-->
                    <!--<TextBlock DockPanel.Dock="Top" Text="Data History Content" FontSize="20" Foreground="{StaticResource ColorInfo}"/>-->

                    <DataGrid x:Name="LotDataGrid" DockPanel.Dock="Top" Margin="0" MaxHeight="200"
                              CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" CanUserReorderColumns="False"
                              materialDesign:DataGridAssist.CellPadding="8 5" materialDesign:DataGridAssist.ColumnHeaderPadding="8 5"
                              Background="Transparent"
                              ItemsSource="{Binding JawInspections, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DatabaseTab, AncestorLevel=1}}">
                        <DataGrid.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollBar}">
                                <Setter Property="Background" Value="{StaticResource ColorPurpleTransparent}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ColorPurpleTransparent}"/>
                            </Style>
                            
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" x:Key="TextRightDataGridColumeHeader">
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="FontFamily" Value="微軟正黑體"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}" x:Key="TextRightDataGridSuccessColumeHeader">
                                <Setter Property="Foreground" Value="{StaticResource ColorSuccess}"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}" x:Key="TextRightDataGridErrorColumeHeader">
                                <Setter Property="Foreground" Value="{StaticResource ColorError}"/>
                            </Style>

                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" x:Key="DataGridAlignRighTextColume">
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="批號" MinWidth="120" CanUserResize="False" IsReadOnly="True" Binding="{Binding LotNumber}" 
                                                HeaderStyle="{StaticResource TextRightDataGridColumeHeader}" ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>
                            
                            <!--查詢按鈕, MinWidth = 80 + 16 (padding)-->
                            <DataGridTemplateColumn MinWidth="96" CanUserResize="False" IsReadOnly="True">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                
                                <DataGridTemplateColumn.Header>
                                    <TextBlock HorizontalAlignment="Right" Text="動作" TextAlignment="Center" Width="80"/>
                                </DataGridTemplateColumn.Header>

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button HorizontalAlignment="Right" Content="查詢" Width="80" Foreground="{StaticResource ColorInfo}"
                                                materialDesign:ButtonAssist.CornerRadius="15"
                                                Style="{StaticResource MaterialDesignFlatButton}" Click="SearchResultsByLotNumber_Click" CommandParameter="{Binding LotNumber}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="時間" MinWidth="120" IsReadOnly="True" 
                                                Binding="{Binding DateTime, StringFormat={}{0:MM/dd/yy HH:mm}, Converter={StaticResource DateTimeToLocalConverter}}" 
                                                HeaderStyle="{StaticResource TextRightDataGridColumeHeader}" ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <!--//-->
                            <DataGridTextColumn Header="良品" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[good].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridSuccessColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>
                            <!--//-->
                            <DataGridTextColumn Header="0.088R" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.088R].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.088L" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.088L].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.008R" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.008R].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.008L" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.008L].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.013R" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.013R].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.013L" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.013L].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.024R" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.024R].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.024L" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[0.024L].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="輪廓度" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[contour].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <!--//-->
                            <DataGridTextColumn Header="後開" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[back].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="開度差" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[bfDiff].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>
                            <!--//-->
                            <DataGridTextColumn Header="平面度" MinWidth="70" IsReadOnly="True" Binding="{Binding LotResults[flatness].Count}"
                                                HeaderStyle="{StaticResource TextRightDataGridErrorColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--<DataGrid x:Name="LotDataGrid" DockPanel.Dock="Top" Margin="0" MaxHeight="200"
                              CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" CanUserReorderColumns="False"
                              materialDesign:DataGridAssist.CellPadding="8 5" materialDesign:DataGridAssist.ColumnHeaderPadding="8 5"
                              Background="Transparent"
                              ItemsSource="{Binding JawInspections, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DatabaseTab, AncestorLevel=1}}">-->
                    
                    
                    <DataGrid DockPanel.Dock="Top" Margin="0 12 0 0" 
                              CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" CanUserReorderColumns="False"
                              materialDesign:DataGridAssist.CellPadding="8 5" materialDesign:DataGridAssist.ColumnHeaderPadding="8 5"
                              Background="{StaticResource ColorGrayTransparent}"
                              ItemsSource="{Binding JawFullSpecInsCol, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DatabaseTab, AncestorLevel=1}}">
                        <DataGrid.Style>
                            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
                                <!--900 - 120-->
                                <Setter Property="Height" Value="508"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}" Value="Maximized">
                                        <!--1080 - 120-->
                                        <Setter Property="Height" Value="688"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>

                        <DataGrid.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollBar}">
                                <Setter Property="Background" Value="{StaticResource ColorPrimaryTransparent}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ColorPrimaryTransparent}"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" x:Key="TextRightDataGridColumeHeader">
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="FontFamily" Value="微軟正黑體"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}" x:Key="TextCenterDataGridColumeHeader">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}" x:Key="TextRightDataGridSuccessColumeHeader">
                                <Setter Property="Foreground" Value="{StaticResource ColorSuccess}"/>
                            </Style>

                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TextRightDataGridColumeHeader}" x:Key="TextRightDataGridErrorColumeHeader">
                                <Setter Property="Foreground" Value="{StaticResource ColorError}"/>
                            </Style>

                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}" x:Key="DataGridAlignRighTextColume">
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="0 3"/>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="時間" MinWidth="80" IsReadOnly="True" CanUserResize="False"
                                                Binding="{Binding DateTime, StringFormat={}{0:HH:mm:ss}, Converter={StaticResource DateTimeToLocalConverter}}" 
                                                HeaderStyle="{StaticResource TextRightDataGridColumeHeader}" 
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTemplateColumn Header="OK/NG" MinWidth="80" IsReadOnly="True" CanUserResize="False" 
                                                    HeaderStyle="{StaticResource TextCenterDataGridColumeHeader}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:PackIcon Width="30" Height="26" Tag="{Binding OK}" HorizontalAlignment="Center">
                                            <materialDesign:PackIcon.Style>
                                                <Style TargetType="materialDesign:PackIcon">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                                            <Setter Property="Kind" Value="Cube"/>
                                                            <Setter Property="Foreground" Value="{StaticResource ColorSuccess}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Kind" Value="CubeOff"/>
                                                    <Setter Property="Foreground" Value="{StaticResource ColorError}"/>
                                                </Style>
                                            </materialDesign:PackIcon.Style>
                                        </materialDesign:PackIcon>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <!--//-->
                            <DataGridTextColumn Header="0.088R" MinWidth="70" IsReadOnly="True" Binding="{Binding Results[0.088R], StringFormat={}{0:0.0000}}"
                                                HeaderStyle="{StaticResource TextRightDataGridColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                            <DataGridTextColumn Header="0.088L" MinWidth="70" IsReadOnly="True" Binding="{Binding Results[0.088L], StringFormat={}{0:0.0000}}"
                                                HeaderStyle="{StaticResource TextRightDataGridColumeHeader}"
                                                ElementStyle="{StaticResource DataGridAlignRighTextColume}"/>

                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </materialDesign:Card>
        </StackPanel>
        <!--#endregion-->

    </Grid>
</StackPanel>
