<StackPanel x:Class="ApexVisIns.content.DebugTab"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:local="clr-namespace:ApexVisIns"
            mc:Ignorable="d" 
            Loaded="StackPanel_Loaded"
            d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel.Resources>
        <!--#region Toolbar -->
        <RoutedUICommand x:Key="OpenDevice" Text="Open Device"/>
        <RoutedUICommand x:Key="SingleShot" Text="Single Shot"/>
        <RoutedUICommand x:Key="ContinuousShot" Text="Continuous Shot"/>
        <RoutedUICommand x:Key="CrosshairOn" Text="Crosshair On"/>
        <RoutedUICommand x:Key="AssistRectOn" Text="Assist Rect On"/>
        <!--#endregion-->
        
        <!-- Crosshair -->
        <local:Crosshair x:Key="Crosshair2" Stroke="{StaticResource ColorDeepOrange}" Enable="False"/>
        <!-- 輔助 Rect -->
        <local:AssistRect x:Key="AssistRect2" Enable="False" Stroke="{StaticResource ColorOrange}" StrokeThickness="3"/>
        <!-- 輔助標示器 -->
        <local:Indicator x:Key="Indicator2"/>

    </StackPanel.Resources>

    <StackPanel.InputBindings>
        <!--#region Toobar Input Bindings -->
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{StaticResource OpenDevice}"/>
        <KeyBinding Key="F5" Command="{StaticResource SingleShot}"/>
        <KeyBinding Key="F6" Command="{StaticResource ContinuousShot}"/>
        <KeyBinding Key="F1" Command="{StaticResource CrosshairOn}"/>
        <KeyBinding Key="F2" Command="{StaticResource AssistRectOn}"/>
        <!--#endregion-->
    </StackPanel.InputBindings>

    <StackPanel.CommandBindings>
        <!--#region Toolbar Commnad Bindings -->
        <CommandBinding Command="{StaticResource OpenDevice}" CanExecute="OpenDeviceCanExecute" Executed="OpenDeviceCommand"/>
        <CommandBinding Command="{StaticResource SingleShot}" CanExecute="SingleShotCanExecute" Executed="SingleShotCommand"/>
        <CommandBinding Command="{StaticResource ContinuousShot}" CanExecute="ContinousShotCanExecute" Executed="ContinousShotCommand"/>
        <CommandBinding Command="{StaticResource CrosshairOn}" CanExecute="CanExcute" Executed="CrosshairOnCommnad"/>
        <CommandBinding Command="{StaticResource AssistRectOn}" CanExecute="CanExcute" Executed="AssisRectOnCommand"/>
        <!--#endregion-->
    </StackPanel.CommandBindings>

    <!--#region Toolbar -->
    <DockPanel x:Name="ToolbarPanel"  HorizontalAlignment="Stretch" Background="#22969696">
        <!--#region MainToolbar-->
        <ToolBarTray DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Left" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0">
            <ToolBar Style="{StaticResource MaterialDesignToolBar}" HorizontalAlignment="Right" VerticalAlignment="Center" Background="{x:Null}"
                     Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="DarkBlue"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="CornerRadius" Value="2"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0 2"/>
                    </Style>
                </ToolBar.Resources>
                <!--相機選擇-->
                <ComboBox x:Name="CamSelector" Style="{StaticResource MaterialDesignOutlinedComboBox}" 
                            Padding="5 4" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" 
                            materialDesign:HintAssist.Hint="Camera" 
                            materialDesign:ComboBoxAssist.ShowSelectedItem="False"
                            IsEnabled="{Binding ElementName=CamConnect, Path=IsChecked, Converter={StaticResource BooleanInverter}}"
                            ItemsSource="{Binding CamsSource, Source={StaticResource CameraEnumer}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                            MinWidth="135" Margin="0 0 12 0">
                    <!-- -->
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock TextAlignment="Right" Text="{Binding Model, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <!--開啟相機-->
                <ToggleButton x:Name="CamConnect" ToolTip="(Ctrl+O) Open Device" MinWidth="45"
                                      Cursor="Hand" Focusable="False" IsChecked="False" Background="LimeGreen" Checked="CamConnect_Checked" Unchecked="CamConnect_Unchecked">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=CamSelector, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="IsEnabled" Value="True"/>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <!--//-->
                <Separator/>
                <!--單張擷取-->
                <Button Name="SingleShot" VerticalAlignment="Center" Click="SingleShot_Click" Focusable="False" Foreground="Black" 
                                            ToolTip="(F5) Single Shot" Style="{StaticResource MaterialDesignFlatButton}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndGate}">
                            <Binding Path="IsOpen" Source="{StaticResource BaslerCam}" FallbackValue="False" Mode="OneWay"/>
                            <Binding Path="IsGrabbing" Source="{StaticResource BaslerCam}" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay"></Binding>
                        </MultiBinding>
                    </Button.IsEnabled>

                    <materialDesign:PackIcon Width="30" Height="26">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Setter Property="Kind" Value="CameraOutline"/>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <!--連續擷取-->
                <Button x:Name="ContinouseShot" VerticalAlignment="Center" Click="ContinouseShot_Click" Focusable="False" Foreground="Black"
                                            IsEnabled="{Binding IsOpen, Source={StaticResource BaslerCam}, FallbackValue=False}"
                                            ToolTip="(F6) Continuous Shot" Style="{StaticResource MaterialDesignFlatButton}">
                    <!--IsEnabled="{Binding IsOpen, Source={StaticResource BaslerCam}, FallbackValue=False}"-->
                    <materialDesign:PackIcon Width="30" Height="26">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Style.Triggers>
                                    <!--
                                                        <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False}" Value="True">
                                                            <Setter Property="Kind" Value="VideocamOffOutline"/>
                                                        </DataTrigger>
                                                        -->
                                    <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False}" Value="True">
                                        <Setter Property="Kind" Value="VideocamOffOutline"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Kind" Value="VideoOutline"/>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <!--//-->
                <Separator/>
                <!--解析度 (Resolution)-->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" TextAlignment="Center">
                        <Run Text="{Binding Width, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}"/>
                        <materialDesign:PackIcon Kind="Close" Height="12" Margin="5 0" VerticalAlignment="Center"/>
                        <Run Text="{Binding Height, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}"/>
                    </TextBlock>
                </Border>
                <!--//-->
                <Separator/>
                <!--縮放率 (Zoom Ratio)-->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" MouseLeftButtonDown="RatioTextblock_MouseLeftButtonDown">
                        <Run Text="{Binding ZoomRatio, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                            Mode=OneWay, FallbackValue=100, StringFormat={}{0:F0}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Run Text="%"/>
                    </TextBlock>
                </Border>
                <!--//-->
                <Separator/>
                <!--影像張數 (Frames)-->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" Text="{Binding Frames, Source={StaticResource BaslerCam}, Mode=OneWay, FallbackValue=0}"/>
                </Border>
                <!--//-->
                <Separator/>

                <!--切換Crosshair-->
                <Button VerticalAlignment="Center" Click="ToggleCrosshair_Click" ToolTip="(F1) Show Crosshair" materialDesign:RippleAssist.IsDisabled="True" Height="36">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enable, Source={StaticResource Crosshair}}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                    <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="TargetVariant" Width="30" Height="26"/>
                </Button>
                <!--輔助方塊-->
                <Button VerticalAlignment="Center" Click="ToggleAssistRect_Click" ToolTip="(F2) Show Assist Rectangle" materialDesign:RippleAssist.IsDisabled="True" Height="36">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enable, Source={StaticResource AssistRect}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                    <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="SquareOutline" Width="30" Height="26"/>
                </Button>
                <!--//-->
                <Separator/>

                <!--#region Region For Test Region For Test Region For Test Region For Test Region For Test -->
                <Button Margin="50 0 0 0" VerticalAlignment="Center" Click="Button_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <materialDesign:PackIcon Kind="Thermometer" Width="30" Height="26"/>
                </Button>
                <!--#endregion-->

            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->
        <!--#region SubToolbar -->
        <ToolBarTray DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0" FlowDirection="RightToLeft" >
            <ToolBar Style="{StaticResource MaterialDesignToolBar}" VerticalAlignment="Center" Background="{x:Null}" 
                     Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                <!--//-->
            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->
    </DockPanel>
    <!--#endregion-->

    <!--#region Contect -->
    <Border BorderBrush="{StaticResource ColorGray}" BorderThickness="0 1">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="1 0" UseLayoutRounding="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--#region Image Panel -->
                <Border x:Name="ImageBorder" Grid.Column="1" Grid.RowSpan="2" BorderThickness="1 0 " BorderBrush="{StaticResource ColorOrange}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Vertical">
                        <Grid x:Name="ImageGrid">
                            <ScrollViewer x:Name="ImageScroller" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Background="{x:Null}"
                                          PreviewMouseWheel="ImageScroller_PreviewMouseWheel">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerPrimary}">
                                        <Setter Property="Height" Value="720"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Mode=OneWay}" Value="Maximized">
                                                <Setter Property="Height" Value="900"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>

                                <Viewbox x:Name="ImageViewbox">
                                    <Canvas x:Name="ImageCanvas" Background="{StaticResource ColorGrayTransparent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                            Width="{Binding Width, Source={StaticResource BaslerCam}, UpdateSourceTrigger=PropertyChanged}" 
                                            Height="{Binding Height, Source={StaticResource BaslerCam}, UpdateSourceTrigger=PropertyChanged}"
                                            PreviewMouseDown="ImageCanvas_MouseDown" PreviewMouseUp="ImageCanvas_MouseUp" PreviewMouseMove="ImageCanvas_MouseMove"
                                            MouseLeave="ImageCanvas_MouseLeave">
                                        
                                        <Image x:Name="WpfImage" Canvas.Left="0" Canvas.Top="0" Stretch="UniformToFill" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Source="{Binding ImageSource, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>

                                        <!--#region Assist Rectangle -->
                                        <Rectangle x:Name="AssistRectangle" DataContext="{StaticResource AssistRect2}"
                                                   Stroke="{Binding Stroke , FallbackValue={StaticResource ColorDeepOrange}}"
                                                   StrokeThickness="{Binding StrokeThickness}" 
                                                   Canvas.Left="{Binding X, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" 
                                                   Canvas.Top="{Binding Y, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                                   Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}"
                                                   Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}" 
                                                   Visibility="{Binding Enable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                                        <!--#endregion-->

                                        <!--#region Crosshair Lines -->
                                        <!-- Horizontal, 綁定 ImageCanvas (X1, X2, Y1, Y2)  & CrosshairOn (Visibility) -->
                                        <Line x:Name="CrosshairH" 
                                            X1="0" X2="{Binding ElementName=ImageCanvas, Path=Width,Mode=OneWay}"
                                            Y1="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                            Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                            Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                            Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}" />
                                        <!-- Vertical, 綁定 ImageCanvas (X1, X2, Y1, Y2)  & CrosshairOn (Visibility) -->
                                        <Line x:Name="CrosshairV" 
                                            X1="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}" 
                                            X2="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                            Y1="0" Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay}"
                                            Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                            Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                                        <!--#endregion-->
                                        
                                        

                                    </Canvas>
                                </Viewbox>
                            </ScrollViewer>
                        </Grid>    
                    </StackPanel>
                </Border>
                <!--#endregion-->
            </Grid>
        </StackPanel>
    </Border>
    <!--#endregion-->
</StackPanel>
