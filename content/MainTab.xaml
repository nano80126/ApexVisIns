<StackPanel x:Class="ApexVisIns.content.MainTab"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:local="clr-namespace:ApexVisIns"
            xmlns:ctProperty="clr-namespace:ApexVisIns.CustomProperty"
            xmlns:control="clr-namespace:ApexVisIns.control" 
            d:DataContext="{d:DesignInstance Type=local:ApexDefect}"
            DataContext="{StaticResource ApexDefect}"
            mc:Ignorable="d" 
            Loaded="StackPanel_Loaded"
            Unloaded="StackPanel_Unloaded"
            d:DesignHeight="450" d:DesignWidth="800"
            UseLayoutRounding="True"
            Orientation="Vertical">
    <StackPanel.Resources>
        <local:StatusColorConverter x:Key="StatusColorConverter"/>
    </StackPanel.Resources>
    
    <DockPanel x:Name="ToolBarPanel" HorizontalAlignment="Stretch" Background="#22969696">
        <!--#region ToolBar 1 -->
        <ToolBarTray DockPanel.Dock="Left"  VerticalAlignment="Center" HorizontalAlignment="Stretch" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0">
            <ToolBar Style="{StaticResource MaterialDesignToolBar}" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                <ToolBar.Resources>
                    <!--<Style></Style>-->
                </ToolBar.Resources>

                <!--
                <Canvas VerticalAlignment="Center" Style="{StaticResource ComplexPackIcon}" Background="White">
                    <materialDesign:PackIcon Kind="VideoOutline" Width="26" Height="24" />
                    <materialDesign:PackIcon Kind="Check" Canvas.Right="0" Canvas.Bottom="0" />
                </Canvas>
                -->

                <!--<TextBlock VerticalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{StaticResource  ColorPrimary}" Text="規格選擇 (長、中、短)"/>-->
                <!--<TextBlock Text="規格選擇" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="{StaticResource  ColorPrimary}"/>-->

                <ListBox Style="{StaticResource MaterialDesignToolToggleListBox}" Background="Transparent" Foreground="{StaticResource ColorPurple}"
                         materialDesign:ListBoxItemAssist.ShowSelection="True" materialDesign:ShadowAssist.ShadowDepth="Depth0"
                         materialDesign:ListBoxAssist.IsToggle="False"  Cursor="Hand" SelectionChanged="SpecSelector_SelectionChanged"
                         IsEnabled="False">
                    <!--<ListBox.IsEnabled>
                        1. 確認 Servo Motion 連線狀態
                        2. 確認 是否有原點復歸
                    </ListBox.IsEnabled>-->

                    <ListBoxItem Content="長" FontSize="16" Padding="25 0" Height="32" VerticalAlignment="Center" FontWeight="SemiBold"/>
                    <ListBoxItem Content="中" FontSize="16" Padding="25 0" Height="32" VerticalAlignment="Center" FontWeight="SemiBold"/>
                    <ListBoxItem Content="短" FontSize="16" Padding="25 0" Height="32" VerticalAlignment="Center" FontWeight="SemiBold"/>
                </ListBox>


                <Button Margin="12 0 0 0" VerticalAlignment="Center" Content="啟動相機" Foreground="{StaticResource ColorSuccess}"
                        Style="{StaticResource MaterialDesignToolButton}" Click="StartCameraGrab_Click"/>

                <Button Margin="12 0 0 0" VerticalAlignment="Center" Content="停止相機" Foreground="{StaticResource ColorSuccess}"
                        Style="{StaticResource MaterialDesignToolButton}" Click="StopCameraGrab_Click"/>


                <Button Margin="12 0 0 0" VerticalAlignment="Center" Content="裝置斷線" Foreground="{StaticResource ColorError}"
                        Style="{StaticResource MaterialDesignToolButton}" Click="DeinitBtn_Click"/>


                <Button Margin="250 0 0 0" VerticalAlignment="Center" Content="確認 (測試用)" Style="{StaticResource MaterialDesignToolButton}" Click="CheckHwStatus_Click"/>

            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->

        <!--#region Toolbar 2 -->
        <ToolBarTray DockPanel.Dock="Right" FlowDirection="RightToLeft" VerticalAlignment="Center" HorizontalAlignment="Right" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0">
            <ToolBar Style="{StaticResource MaterialDesignToolBar}" HorizontalAlignment="Right" VerticalAlignment="Center" Background="{x:Null}" Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="DarkBlue"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="CornerRadius" Value="2"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0 2"/>
                    </Style>

                    <!--
                    <Style TargetType="DockPanel" x:Key="IconPanel">
                        <Setter Property="Width"
                    </Style>
                    -->

                    <Style TargetType="Canvas" BasedOn="{StaticResource ComplexPackIcon}">
                        <Setter Property="FlowDirection" Value="LeftToRight"/>
                        <Setter Property="Margin" Value="8 0"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>

                    <Style TargetType="materialDesign:PackIcon" x:Key="HWStatus">
                        <Setter Property="Width" Value="16"/>
                        <Setter Property="Height" Value="16"/>
                        <Setter Property="Canvas.Right" Value="0"/>
                        <Setter Property="Canvas.Bottom" Value="0"/>

                        <Setter Property="Kind" Value="CloseCircle"/>
                        <Setter Property="Foreground" Value="{StaticResource ColorError}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding (ctProperty:StatusHelper.Connected), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter Property="Kind" Value="CheckCircle"/>
                                <Setter Property="Foreground" Value="{StaticResource ColorSuccess}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>

                <!--#region Light Contorller Connection Status Bar -->
                <Border Margin="0 0 12 0" FlowDirection="LeftToRight">
                    <StackPanel Orientation="Horizontal">
                        <!--// 24V Light Controller -->
                        <Canvas ToolTip="24V 光源控制器">
                            <materialDesign:PackIcon Kind="LightbulbOnOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}" 
                                                     ctProperty:StatusHelper.Connected="{Binding [0].IsComOpen, Source={StaticResource LightCtrls}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Canvas>
                        <!--// 6V Light Controller -->
                        <Canvas ToolTip="6V 光源控制器">
                            <materialDesign:PackIcon Kind="LightbulbOnOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}" 
                                                     ctProperty:StatusHelper.Connected="{Binding [1].IsComOpen, Source={StaticResource LightCtrls}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Canvas>
                    </StackPanel>
                </Border>
                <!--#endregion-->

                <!--#region Motor Controller Connection Status -->
                <Border Margin="0 0 12 0" FlowDirection="LeftToRight">
                    <StackPanel Orientation="Horizontal">
                        <!-- X 軸驅動 -->
                        <Canvas ToolTip="X 軸驅動器" Background="Transparent">
                            <materialDesign:PackIcon Kind="AxisXRotateClockwise" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}"
                                                     ctProperty:StatusHelper.Connected="{Binding Axes[0].IsAxisOpen, Source={StaticResource ServoMotion}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>
                        <!-- A 軸驅動 -->
                        <Canvas ToolTip="A 軸驅動器" Background="Transparent">
                            <materialDesign:PackIcon Kind="RotateLeft" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}" 
                                                     ctProperty:StatusHelper.Connected="{Binding Axes[1].IsAxisOpen, Source={StaticResource ServoMotion}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>
                        <!--//-->
                    </StackPanel>
                </Border>
                <!--#endregion-->

                <!--#region Camera Connection Status Bar -->
                <Border FlowDirection="LeftToRight">
                    <StackPanel Orientation="Horizontal">
                        <Canvas ToolTip="Camera 1">
                            <materialDesign:PackIcon Kind="VideoOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}"
                                                     ctProperty:StatusHelper.Connected="{Binding [0].IsOpen, Source={StaticResource BaslerCams}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>

                        <Canvas ToolTip="Camera 2">
                            <materialDesign:PackIcon Kind="VideoOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}"
                                                     ctProperty:StatusHelper.Connected="{Binding [1].IsOpen, Source={StaticResource BaslerCams}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>

                        <Canvas ToolTip="Camera 3">
                            <materialDesign:PackIcon Kind="VideoOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}"
                                                     ctProperty:StatusHelper.Connected="{Binding [2].IsOpen, Source={StaticResource BaslerCams}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>

                        <Canvas ToolTip="Camera 4">
                            <materialDesign:PackIcon Kind="VideoOutline" Canvas.Left="2" Canvas.Top="1" Width="26" Height="24"/>
                            <materialDesign:PackIcon Style="{StaticResource HWStatus}"
                                                     ctProperty:StatusHelper.Connected="{Binding [3].IsOpen, Source={StaticResource BaslerCams}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, FallbackValue=False}"/>
                        </Canvas>
                    </StackPanel>
                </Border>
                <!--#endregion-->
            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->
    </DockPanel>

    <Border x:Name="ContentBorder" BorderBrush="{StaticResource ColorGray}" BorderThickness="0 1" Background="AliceBlue">
        <!--<StackPanel x:Name="Content" Orientation="Vertical" HorizontalAlignment="Stretch" Margin="1 0" UseLayoutRounding="True">-->
        <Grid x:Name="Content" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="00 0" UseLayoutRounding="True">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Height" Value="780"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Mode=OneWay}" Value="Maximized">
                            <Setter Property="Height" Value="960"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <!--//-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <!--//-->
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <!--#region Control Panel-->
            <Border Grid.Row="0" Grid.Column="0" Background="{x:Null}">
                <materialDesign:Card Style="{StaticResource GeneralCard}">
                    <DockPanel Background="Transparent">
                        <!-- Panel Header -->
                        <DockPanel x:Name="Header" DockPanel.Dock="Top">
                            <materialDesign:PackIcon Kind="ControllerClassic" Width="30" Height="26" Background="Transparent" VerticalAlignment="Bottom"/>
                            <!--  -->
                            <TextBlock FontWeight="Bold" VerticalAlignment="Bottom" FontSize="18" Text="控制板" Style="{StaticResource MaterialDesignSubtitle1TextBlock}"/>
                            <!--  -->
                            <TextBlock Text="{x:Null}"/>
                        </DockPanel>
                        <!-- Seperator -->
                        <Separator DockPanel.Dock="Top" Margin="0 8"/>
                        <!-- Panel Body -->
                        <Grid x:Name="Body" DockPanel.Dock="Top" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <!-- Control Panel 1st col, 1st row, 檢驗狀態 -->
                            <Border x:Name="TestStatusBorder" Grid.Row="0" Grid.Column="0" BorderBrush="Black" BorderThickness="1" CornerRadius="10">
                                <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="28"
                                           FontWeight="SemiBold" TextAlignment="Center" Text="{Binding Status, Converter={StaticResource EnumDescriptionConverter}}"
                                           Foreground="{Binding Status, Converter={StaticResource StatusColorConverter}}">
                                    <!--<TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="Text" Value="檢測狀態"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </TextBlock.Style>-->
                                </TextBlock>
                            </Border>

                            <!-- Control Panel 1st col, 2nd row, 開始 / 停止 -->
                            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Button Content="開始檢測" Margin="12 0" HorizontalAlignment="Center" materialDesign:ButtonAssist.CornerRadius="15"
                                        Foreground="{StaticResource ColorSuccess}" BorderBrush="{StaticResource ColorSuccess}"  FontSize="16"
                                        Style="{StaticResource MaterialDesignOutlinedButton}"/>
                                <Button Content="停止檢測" Margin="12 0" HorizontalAlignment="Center" materialDesign:ButtonAssist.CornerRadius="15"
                                        Foreground="{StaticResource ColorInfo}" BorderBrush="{StaticResource ColorInfo}" FontSize="16"
                                        Style="{StaticResource MaterialDesignOutlinedButton}"/>
                            </StackPanel>

                            <!-- Control Panel 1st col, 3rd row, 經過時間 -->
                            <TextBlock Grid.Row="2" Grid.Column="0" FontFamily="Consolas" LineHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       TextAlignment="Center" FontSize="20" FontWeight="Bold">
                                <TextBlock.Text>
                                    <Binding Path="PassedTime" StringFormat="{}經過時間&#x000A;{0}"/>
                                </TextBlock.Text>
                                <!--TextAlignment="Center" FontSize="20" FontWeight="Bold" Text="經過時間&#x000A;12:00:00">-->
                            </TextBlock>

                            <!--<StackPanel Grid.Row="2" Grid.Column="0"></StackPanel>-->

                            <!-- Row 0, Col 1, 檢驗數量 -->
                            <TextBlock Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" FontFamily="Consolas" LineHeight="32"
                                       FontSize="20" FontWeight="Bold" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" TextAlignment="Center">
                                <TextBlock.Text>
                                    <Binding Path="TotalCount" StringFormat="{}檢驗數量&#x000A;{0}" UpdateSourceTrigger="PropertyChanged"/>
                                </TextBlock.Text>
                            </TextBlock>

                            <!--
                            <StackPanel Grid.Column="1" Grid.Row="0">
                                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" FontFamily="Consolas" LineHeight="32"
                                           FontSize="20" FontWeight="Bold"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}" TextAlignment="Center">
                                    <Run>檢驗數量: 0</Run>
                                </TextBlock>    
                            </StackPanel>
                            -->
                            
                            <!-- Row 1, Col 1, OK / NG 數量 -->
                            <DockPanel Grid.Column= "1" Grid.Row="2" HorizontalAlignment="Stretch">
                                <TextBlock DockPanel.Dock="Left" Margin="16 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                           FontSize="20" FontWeight="Bold"
                                           FontFamily="Consolas" LineHeight="32" Foreground="Green"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}" TextAlignment="Center">
                                    <TextBlock.Text>
                                        <Binding Path="OK" StringFormat="{}OK 數量&#x000A;{0}"/>
                                    </TextBlock.Text>
                                    <!--<Run Text="OK 數量"/>
                                        <LineBreak/>
                                        <Run Text="{Binding OK, UpdateSourceTrigger=PropertyChanged}"/>
                                    -->
                                </TextBlock>

                                <TextBlock DockPanel.Dock="Left" Margin="0 0 16 0" VerticalAlignment="Center" HorizontalAlignment="Right" 
                                           FontSize="20" FontWeight="Bold"
                                           FontFamily="Consolas" LineHeight="32" Foreground="Red"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}" TextAlignment="Center">
                                    <TextBlock.Text>
                                        <Binding Path="NG" StringFormat="{}NG 數量&#x000A;{0}"/>
                                    </TextBlock.Text>
                                    <!--<Run Text="NG 數量"/>
                                        <LineBreak/>
                                        <Run Text="10000"/>-->
                                </TextBlock>

                                <!--
                                <TextBlock DockPanel.Dock="Right" Margin="0 0 16 0" VerticalAlignment="Center" HorizontalAlignment="Right" 
                                           FontSize="20" FontWeight="Bold" 
                                           FontFamily="Consolas" LineHeight="32" Foreground="{StaticResource ColorSecondary}"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}" TextAlignment="Center">
                                    <Run Text="OK" Foreground="{StaticResource ColorSuccess}"/>
                                    <Run Text="/"/>
                                    <Run Text="NG" Foreground="{StaticResource ColorError}"/>
                                    <LineBreak/>
                                    <Run Text="200000" Foreground="{StaticResource ColorSuccess}"/>
                                    <Run Text="/"/>
                                    <Run Text="10" Foreground="{StaticResource ColorError}"/>
                                </TextBlock>-->
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <!--//-->
                </materialDesign:Card>
            </Border>
            <!--#endregion-->

            <!--#region Images -->
            <!-- Image 1 -->
            <Border Grid.Row="0" Grid.Column="1" x:Name="Image1Border" BorderThickness="1" BorderBrush="Black">
                <Viewbox x:Name="Image1Viewbox">
                    <Image x:Name="Image1" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Source="{Binding ImageSource1, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                    <!--<TextBlock></TextBlock>-->
                </Viewbox>
            </Border>

            <!-- Image 2 -->
            <Border Grid.Row="0" Grid.Column="2" x:Name="Image2Border" BorderThickness="1" BorderBrush="Black">
                <Viewbox x:Name="Image2Viewbox">
                    <Image x:Name="Image2" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Source="{Binding ImageSource2, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                </Viewbox>
                
                <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"
                           Style="{StaticResource MaterialDesignHeadline4TextBlock}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Camera 2&#x0d;&#x0a;{0} x {1}">
                            <Binding ElementName="Image2Border" Path="ActualWidth" Mode="OneWay"/>
                            <Binding ElementName="Image2Border" Path="ActualHeight" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>-->
            </Border>

            <!-- Image 3 -->
            <Border Grid.Row="1" Grid.ColumnSpan="3" x:Name="Image3Border" BorderThickness="1" BorderBrush="Black">
                <Viewbox x:Name="Image3Viewbox">
                    <Image x:Name="Image3" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"
                           Source="{Binding ImageSource3, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                </Viewbox>

                <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"
                           Style="{StaticResource MaterialDesignHeadline4TextBlock}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Camera 3&#x0d;&#x0a;{0} x {1}">
                            <Binding ElementName="Image3Border" Path="ActualWidth" Mode="OneWay"/>
                            <Binding ElementName="Image3Border" Path="ActualHeight" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>-->
            </Border>

            <!--Image 4-->
            <Border Grid.Row="2" Grid.ColumnSpan="3" x:Name="Image4Border" BorderThickness="1" BorderBrush="Black">
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"  TextAlignment="Center" Style="{StaticResource MaterialDesignHeadline4TextBlock}">
                    <!--<Run Text="Camera 4"/>
                    <LineBreak/>
                    <Run Text="{Binding ElementName=Image4Border, Path=ActualWidth, Mode=OneWay}"/>
                    <Run Text="x"></Run>
                    <Run></Run>-->
                    <!--<Run>-->
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Camera 4&#x0d;&#x0a;{0} x {1}">
                            <Binding ElementName="Image4Border" Path="ActualWidth" Mode="OneWay"/>
                            <Binding ElementName="Image4Border" Path="ActualHeight" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                    <!--</Run>-->
                </TextBlock>
            </Border>
            <!--#endregion-->

            <!--#region 方塊流程圖 -->
            <Border Grid.Row="3" Grid.ColumnSpan="3" x:Name="ProcedureBorder">
                <!--<ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 8">
                    <StackPanel.Resources>
                        <Style TargetType="materialDesign:PackIcon">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Width" Value="64"/>
                            <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Mode=Self}}"/>
                        </Style>
                    </StackPanel.Resources>

                    <!--
                    <TextBlock Text="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=-1}"/>
                    <TextBlock Text="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=0}"/>
                    <TextBlock Text="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=1}"/>
                    -->

                    <!--HighLight="{Binding Step, Converter={StaticResource EqualConverter}, ConverterParameter=0}"-->
                    <control:ProcedureBlock BlockName="初始化" StepNumber="0" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=0}"/>

                    <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                    <control:ProcedureBlock BlockName="原點復歸" StepNumber="1" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=1}"
                                            SubPackIcon="Flag" EnableSubPackIcon="True" SubPackIconColor="{StaticResource ColorInfo}"/>

                    <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                    <control:ProcedureBlock BlockName="選擇規格" StepNumber="2" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=2}"
                                            EnableSubPackIcon="True" SubPackIcon="User" SubPackIconColor="{StaticResource ColorInfo}"/>

                    <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                    <control:ProcedureBlock BlockName="啟動檢驗" StepNumber="3" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=3}"
                                            EnableSubPackIcon="True" SubPackIcon="User" SubPackIconColor="{StaticResource ColorInfo}"/>

                    <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                    <Border BorderBrush="{StaticResource ColorSuccessTransparent}" BorderThickness="3" CornerRadius="8" Margin="-4 -12">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4 0">
                            <control:ProcedureBlock BlockName="等待上料" StepNumber="4" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=4}"
                                                        EnableSubPackIcon="True" SubPackIcon="User" SubPackIconColor="{StaticResource ColorInfo}"/>

                            <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                            <control:ProcedureBlock BlockName="工件對位" StepNumber="5" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=5}"/>

                            <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                            <control:ProcedureBlock BlockName="毛邊檢測" StepNumber="6" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=6}"/>

                            <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                            <control:ProcedureBlock BlockName="外觀檢測" StepNumber="7" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=7}"/>

                            <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                            <control:ProcedureBlock BlockName="等待下料" StepNumber="8" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=8}"
                                                    EnableSubPackIcon="True" SubPackIcon="User" SubPackIconColor="{StaticResource ColorInfo}"/>
                        </StackPanel>
                    </Border>

                    <materialDesign:PackIcon Kind="ArrowRight" Width="32"/>

                    <control:ProcedureBlock BlockName="完成檢驗" StepNumber="9" HighLight="{Binding CurrentStep, Converter={StaticResource EqualConverter}, ConverterParameter=9}"
                                            EnableSubPackIcon="True" SubPackIcon="CheckBold" SubPackIconColor="{StaticResource ColorTeal}"/>

                </StackPanel>
                <!--</ScrollViewer>-->
            </Border>

            <!--<Border Grid.Row="3" Grid.ColumnSpan="3" x:Name="ProcedureBorder2" CornerRadius="8" BorderThickness="5" BorderBrush="{StaticResource ColorSuccessTransparent}" Background="{StaticResource ColorBrown}">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"
                           Style="{StaticResource MaterialDesignHeadline4TextBlock}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}}{0} x {1}">
                                <Binding ElementName="ProcedureBorder"  Path="ActualWidth" Mode="OneWay"/>
                                <Binding ElementName="ProcedureBorder" Path="ActualHeight" Mode="OneWay"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
            </Border>-->
            <!--#endregion-->

            <!--Record List-->
            <Border Grid.RowSpan="4" Grid.Column="3" x:Name="RecordListBorder" Background="{StaticResource ColorBlueGrayTranparent}">
                <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignHeadline4TextBlock}">Record List</TextBlock>-->

                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignHeadline4TextBlock}"> 
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Record List&#x0d;&#x0a;{0} x {1}">
                            <Binding ElementName="RecordListBorder"  Path="ActualWidth" Mode="OneWay"/>
                            <Binding ElementName="RecordListBorder" Path="ActualHeight" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Border>
        </Grid>
        <!--</StackPanel>-->
    </Border>

</StackPanel>
 