<StackPanel x:Class="MCAJawIns.content.EngineerTab" 
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:uc="clr-namespace:MCAJawIns.module"
            xmlns:panel="clr-namespace:MCAJawIns.Panel" 
            xmlns:app="clr-namespace:MCAJawIns" 
            xmlns:local="clr-namespace:MCAJawIns.content" 
            xmlns:ctrl="clr-namespace:MCAJawIns.Control"
            mc:Ignorable="d" Loaded="StackPanel_Loaded" Unloaded="StackPanel_Unloaded" 
            d:DesignHeight="900" 
            d:DesignWidth="1600" 
            UseLayoutRounding="True" 
            Orientation="Vertical">

    <StackPanel.Resources>
        <!-- Crosshair -->
        <app:Crosshair x:Key="Crosshair" Enable="False" Stroke="{StaticResource ColorDeepOrange}" />
        <!-- 輔助 Rect -->
        <app:AssistRect x:Key="AssistRect" Enable="False" Stroke="{StaticResource ColorOrange}" StrokeThickness="3" />
        <!-- 輔助標示器 -->
        <app:Indicator x:Key="Indicator" />
    </StackPanel.Resources>

    <!--#region Toolbar -->
    <DockPanel x:Name="ToolbarPanel"  HorizontalAlignment="Stretch" Background="#22969696">
        <!--#region MainToolbar-->
        <ToolBarTray DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Left" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0">
            <!-- DataContext 動態變更, CamSelectort SelectedIndex Changed 觸發 -->
            <ToolBar x:Name="Toolbar" Style="{StaticResource MaterialDesignToolBar}" HorizontalAlignment="Right" VerticalAlignment="Center" Background="{x:Null}" Height="38"
                    ToolBarTray.IsLocked="True" Focusable="False" DataContext="{StaticResource BaslerCam}">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="DarkBlue" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="2" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Padding" Value="0 2" />
                    </Style>
                </ToolBar.Resources>
                <!--相機選擇-->
                <ComboBox x:Name="CamSelector" Style="{StaticResource MaterialDesignOutlinedComboBox}" Padding="5 4" FontWeight="Bold" VerticalAlignment="Center"
                        HorizontalAlignment="Left" materialDesign:HintAssist.Hint="Camera" materialDesign:ComboBoxAssist.ShowSelectedItem="False"
                        IsEnabled="{Binding ElementName=CamConnect, Path=IsChecked, Converter={StaticResource BooleanInverter}}"
                        ItemsSource="{Binding CamsSource, Source={StaticResource CameraEnumer}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                        SelectionChanged="CamSelector_SelectionChanged" MouseRightButtonUp="CamSelector_MouseRightButtonUp" MinWidth="135" Margin="0 0 12 0">
                    <!--  -->
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <!--<StackPanel Orientation="Horizontal">-->
                            <TextBlock TextAlignment="Center" Text="{Binding Model, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                            <!--</StackPanel>-->
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <!--開啟相機-->
                <ToggleButton x:Name="CamConnect" ToolTip="(Ctrl+O) Open Device" MinWidth="45" Cursor="Hand" IsChecked="False" Focusable="False" Background="LimeGreen"
                        Checked="CamConnect_Checked" Unchecked="CamConnect_Unchecked">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                            <Style.Triggers>
                                <!--="{Binding ElementName=CamSelector, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1"-->
                                <!-- CamSelector SelectedIndex 有機會自己跳掉 -->
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource BooleanOrGate}">
                                            <Binding ElementName="CamSelector" Path="SelectedIndex" Converter="{StaticResource NumberEqualConverter}" ConverterParameter="-1" />
                                            <Binding Path="IsGrabbing" FallbackValue="False" UpdateSourceTrigger="PropertyChanged" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <!--<DataTrigger Binding="{Binding IsGrabbing, FallbackValue=False, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>-->
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <MultiBinding>
                                                    <Binding ElementName="CamSelector" Path="SelectedIndex" Converter="{StaticResource NotEqualConverter}" ConverterParameter="-1"/>
                                                    <Binding></Binding>
                                                </MultiBinding>
                                            </Condition.Binding>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>-->
                            </Style.Triggers>
                            <Setter Property="IsEnabled" Value="True" />
                            <!-- Camera 選擇不為 -1, Camera 不為 Grabbing -->
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <!--//-->
                <Separator />
                <!--單張擷取-->
                <Button Name="SingleShot" VerticalAlignment="Center" Click="SingleShot_Click" Focusable="False" Foreground="Black" ToolTip="(F5) Single Shot"
                        Style="{StaticResource MaterialDesignFlatButton}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndGate}">
                            <Binding Path="IsOpen" FallbackValue="False" Mode="OneWay" />
                            <Binding Path="IsGrabbing" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay"></Binding>
                        </MultiBinding>
                    </Button.IsEnabled>

                    <materialDesign:PackIcon Width="30" Height="26" VerticalAlignment="Center">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Setter Property="Kind" Value="CameraOutline" />
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <!--連續擷取-->
                <Button x:Name="ContinouseShot" VerticalAlignment="Center" Click="ContinouseShot_Click" Focusable="False" Foreground="Black" ToolTip="(F6) Continuous Shot"
                        Style="{StaticResource MaterialDesignFlatButton}">
                    <!--IsEnabled="{Binding IsOpen, FallbackValue=False}"-->
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndGate}">
                            <Binding Path="IsOpen" FallbackValue="False" Mode="OneWay" />
                            <Binding Path="IsTriggerMode" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <!--//-->
                    <materialDesign:PackIcon Width="30" Height="26" VerticalAlignment="Center">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGrabbing, FallbackValue=False}" Value="True">
                                        <Setter Property="Kind" Value="VideoOffOutline" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Kind" Value="VideoOutline" />
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <!--切換 StreamGrabber-->
                <Separator />
                <Button x:Name="ToggleStreamGrabber" VerticalAlignment="Center" Click="ToggleStreamGrabber_Click" Focusable="False" Foreground="Black"
                        ToolTip="(F7) Toggle Stream Grabber" Style="{StaticResource MaterialDesignFlatButton}">
                    <!--IsEnabled="{Binding IsOpen, FallbackValue=False}"-->
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndGate}">
                            <Binding Path="IsOpen" FallbackValue="False" Mode="OneWay" />
                            <!--<Binding Path="" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay"/>-->
                        </MultiBinding>
                    </Button.IsEnabled>
                    <!--//-->
                    <materialDesign:PackIcon Width="30" Height="26" VerticalAlignment="Center">
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsTriggerMode, FallbackValue=False}" Value="True">
                                        <Setter Property="Kind" Value="VideoMinusOutline" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Kind" Value="VideoPlusOutline" />
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <!--//-->
                <Button x:Name="RetrieveImage" VerticalAlignment="Center" Click="RetrieveImage_Click" Focusable="False" Foreground="Black" ToolTip="(F8) Retrieve Image"
                        Style="{StaticResource MaterialDesignFlatButton}">
                    <!--IsEnabled="{Binding IsOpen, FallbackValue=False}"-->
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndGate}">
                            <Binding Path="IsOpen" FallbackValue="False" Mode="OneWay" />
                            <!--<Binding Path="IsContinuousGrabbing" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay"/>-->
                        </MultiBinding>
                    </Button.IsEnabled>

                    <materialDesign:PackIcon Width="30" Height="26" Kind="ImageOutline" />
                </Button>

                <!--//-->
                <Separator />
                <!--解析度 (Resolution)-->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" TextAlignment="Center">
                        <Run Text="{Binding Width, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}" />
                        <materialDesign:PackIcon Kind="Close" Height="12" Margin="5 0" VerticalAlignment="Center" />
                        <Run Text="{Binding Height, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}" />
                    </TextBlock>
                </Border>
                <!--//-->
                <Separator />
                <!--縮放率 (Zoom Ratio)-->
                <!--
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" MouseLeftButtonDown="RatioTextblock_MouseLeftButtonDown">
                        <Run Text="{Binding ZoomRatio, RelativeSource={RelativeSource AncestorType=StackPanel, Mode=FindAncestor}, 
                            Mode=OneWay, FallbackValue=100, StringFormat={}{0:F0}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Run Text="%"/>
                    </TextBlock>
                </Border>
                -->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" MouseLeftButtonDown="RatioTextblock_MouseLeftButtonDown"
                            Text="{Binding Path=ZoomRatio, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel, AncestorLevel=1}, Mode=OneWay, FallbackValue=100, StringFormat={}{0:F0} %, UpdateSourceTrigger=PropertyChanged}" />
                </Border>
                <!--//-->
                <Separator />
                <!--影像張數 (Frames)-->
                <Border>
                    <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" Text="{Binding Frames, Mode=OneWay, FallbackValue=0}" />
                </Border>
                <!--//-->
                <Separator />
                <!--切換Crosshair-->
                <Button VerticalAlignment="Center" Click="ToggleCrosshair_Click" ToolTip="(F1) Show Crosshair" materialDesign:RippleAssist.IsDisabled="True" Height="36"
                        Focusable="False">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enable, Source={StaticResource Crosshair}}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}" />
                                    <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="TargetVariant" Width="30" Height="26" />
                </Button>
                <!--輔助方塊-->
                <Button VerticalAlignment="Center" Click="ToggleAssistRect_Click" ToolTip="(F2) Show Assist Rectangle" materialDesign:RippleAssist.IsDisabled="True" Height="36"
                        Focusable="False">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enable, Source={StaticResource AssistRect}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}" />
                                    <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </Button.Style>
                    <materialDesign:PackIcon Kind="SquareOutline" Width="30" Height="26" />
                </Button>
                <!--//-->
                <Separator />


                <!--#region Region For Test Region For Test Region For Test Region For Test Region For Test -->
                <!--
                <Button Margin="50 0 0 0" VerticalAlignment="Center" Click="Button_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Thermometer" Width="30" Height="26" VerticalAlignment="Center"/>
                        <TextBlock Margin="8 0 0 0" Text="測試用按鈕" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                -->
                <!--#endregion-->

            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->
        <!--#region SubToolbar -->
        <ToolBarTray DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0"
                FlowDirection="RightToLeft">
            <ToolBar Style="{StaticResource MaterialDesignToolBar}" VerticalAlignment="Center" Background="{x:Null}" Height="38" ToolBarTray.IsLocked="True" Focusable="False"
                    FlowDirection="LeftToRight">

                <!--#region Toolbar Contents 保留測試按鈕 -->
                <Button VerticalAlignment="Center" Click="ReadImage_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0" Text="讀取" VerticalAlignment="Center" />
                    </StackPanel>  
                </Button>

                <Button VerticalAlignment="Center" Click="RestoreImage_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0" Text="回復" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>

                <Button VerticalAlignment="Center" Click="DealImage_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0" Text="處理" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>

                <Button VerticalAlignment="Center" Click="SaveImage_Click" Style="{StaticResource MaterialDesignFlatButton}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0" Text="儲存" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <!--#endregion-->

            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->
    </DockPanel>
    <!--#endregion-->

    <!--#region Content -->
    <Border BorderBrush="{StaticResource ColorGray}" BorderThickness="0 1">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="0" UseLayoutRounding="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--#region Image Panel -->
                <Border x:Name="ImageBorder" Grid.Column="1" Grid.RowSpan="2" BorderThickness="1 0" BorderBrush="{StaticResource ColorOrange}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Vertical">
                        <Grid x:Name="ImageGrid">
                            <ScrollViewer x:Name="ImageScroller" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Background="{x:Null}"
                                          PreviewMouseWheel="ImageScroller_PreviewMouseWheel">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerPrimary}">
                                        <Setter Property="Height" Value="720"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Mode=OneWay}" Value="Maximized">
                                                <Setter Property="Height" Value="900"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>

                                <Viewbox x:Name="ImageViewbox">
                                    <Canvas x:Name="ImageCanvas" Background="{StaticResource ColorGrayTransparent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                            DataContext="{Binding ElementName=Toolbar, Path=DataContext}"
                                            d:DataContext="{d:DesignInstance Type=app:BaslerCam}"
                                            Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, FallbackValue=1000}" 
                                            Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, FallbackValue=1000}"
                                            PreviewMouseDown="ImageCanvas_MouseDown" PreviewMouseUp="ImageCanvas_MouseUp" PreviewMouseMove="ImageCanvas_MouseMove"
                                            MouseLeave="ImageCanvas_MouseLeave">
                                        <!--MinWidth="100" MinHeight="100"-->

                                        <Image x:Name="WpfImage" Canvas.Left="0" Canvas.Top="0" Stretch="UniformToFill" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Source="{Binding ImageSource, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                        <!--Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window, AncestorLevel=1} , UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"-->
                                        <!--Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Mode=OneWay}"-->

                                        <!--#region Assist Rectangle -->
                                        <Rectangle x:Name="AssistRectangle" DataContext="{StaticResource AssistRect}"
                                                   Stroke="{Binding Stroke , FallbackValue={StaticResource ColorDeepOrange}}"
                                                   StrokeThickness="{Binding StrokeThickness}" 
                                                   Canvas.Left="{Binding X, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" 
                                                   Canvas.Top="{Binding Y, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                                   Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}"
                                                   Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}" 
                                                   Visibility="{Binding Enable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibility}, FallbackValue=Hidden}"/>
                                        <!--#endregion-->

                                        <!--#region Crosshair Lines -->
                                        <!-- Horizontal, 綁定 ImageCanvas (X1, X2, Y1, Y2) & CrosshairOn (Visibility) -->
                                        <Line x:Name="CrosshairH" 
                                                X1="0" X2="{Binding ElementName=ImageCanvas, Path=Width,Mode=OneWay}"
                                                Y1="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                                Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibility}, FallbackValue=Hidden}" />
                                        <!-- Vertical, 綁定 ImageCanvas (X1, X2, Y1, Y2) & CrosshairOn (Visibility) -->
                                        <Line x:Name="CrosshairV" 
                                                X1="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}" 
                                                X2="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                Y1="0" Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay}"
                                                Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                                Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibility}, FallbackValue=Hidden}"/>
                                        <!--#endregion-->
                                    </Canvas>
                                </Viewbox>
                            </ScrollViewer>
                        </Grid>

                        <!--#region ImageFooter -->
                        <DockPanel x:Name="AssistFooter" HorizontalAlignment="Stretch" Margin="0" Height="20" MinWidth="20" Background="{x:Null}">
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{StaticResource Indicator}">
                                <TextBlock VerticalAlignment="Center" TextAlignment="Center" MinWidth="120" FontSize="16" FontFamily="consolas">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0,4:D} , {1,4:D}">
                                            <Binding Path="X" FallbackValue="0" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Y" FallbackValue="0" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                            <!--//-->
                            <Separator DockPanel.Dock="Left" Width="1" Height="12" Margin="12 0" Background="Gray" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                            <!--//-->
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Right" DataContext="{StaticResource Indicator}">
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="0 0 15 0"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                        <Setter Property="MinWidth" Value="65"/>
                                        <Setter Property="FontSize" Value="16"/>
                                        <Setter Property="FontFamily" Value="consolas"/>
                                    </Style>
                                </StackPanel.Resources>
                                <!--Text="{Binding R, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=R: {0:0}, FallbackValue=0}"-->
                                <TextBlock Foreground="Red">
                                    <TextBlock.Text>
                                        <Binding Path="R" UpdateSourceTrigger="PropertyChanged" StringFormat="R: {0,3:D}" FallbackValue="0"/>
                                    </TextBlock.Text>
                                </TextBlock>
                                <!--Text="{Binding G, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=G: {0:0}, FallbackValue=0}"-->
                                <TextBlock Foreground="Green">
                                    <TextBlock.Text>
                                        <Binding Path="G" UpdateSourceTrigger="PropertyChanged" StringFormat="G: {0,3:D}" FallbackValue="0"/>
                                    </TextBlock.Text>
                                </TextBlock>
                                <!--Text="{Binding B, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=B: {0:0}, FallbackValue=0}"-->
                                <TextBlock Foreground="Blue">
                                    <TextBlock.Text>
                                        <Binding Path="B" UpdateSourceTrigger="PropertyChanged" StringFormat="B: {0,3:D}" FallbackValue="0"/>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>

                            <!--// 輔助 Rect 使用 (靠右)-->
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{StaticResource AssistRect}">
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="0 0 15 0"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                        <Setter Property="MinWidth" Value="65"/>
                                        <Setter Property="FontSize" Value="16"/>
                                        <Setter Property="FontFamily" Value="consolas"/>
                                    </Style>
                                </StackPanel.Resources>

                                <TextBlock Text="{Binding X, UpdateSourceTrigger=PropertyChanged, StringFormat=X: {0:0}, FallbackValue=0}"/>
                                <TextBlock Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, StringFormat=Y: {0:0}, FallbackValue=0}"/>
                                <TextBlock Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, StringFormat=W: {0:0}, FallbackValue=0}"/>
                                <TextBlock Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, StringFormat=H: {0:0}, FallbackValue=0}"/>
                            </StackPanel>
                        </DockPanel>
                        <!--#endregion-->
                    </StackPanel>
                </Border>
                <!--#endregion-->

                <!--//-->
                <StackPanel Grid.Column="0" Grid.Row="0" Margin="0 1" Orientation="Vertical" VerticalAlignment="Top" Background="{x:Null}" Width="300">
                    <!--DataContext="{StaticResource BaslerCam}"-->
                    <!--DataContext 與 Toolbar 同步-->
                    <panel:CameraConfigPanel x:Name="ConfigPanel" Background="LightCyan" DataContext="{StaticResource BaslerCam}" />
                    <!--<uc:ConfigPanel x:Name="ConfigPanel1" Style="{StaticResource PanelTopCard}" DataContext="{StaticResource BaslerCam}" />-->
                    <!--//-->
                    <uc:OffsetPanel x:Name="OffsetPanel" Style="{StaticResource PanelTopCard}" />
                    <!--//-->
                    <!--<panel:CameraConfigPanel x:Name="ConfigPanel" Background="LightCyan" DataContext="{StaticResource BaslerCam}" />-->
                </StackPanel>
                <!--//-->
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="0 1" Orientation="Vertical" VerticalAlignment="Bottom" Background="{x:Null}" Width="300">
                    <!--光源控制 Panel-->
                    <uc:LightPanel x:Name="LightPanel" Style="{StaticResource PanelBottomCard}"/>
                </StackPanel>
                <!--//-->
                <StackPanel Grid.Column="2" Grid.Row="0" Margin="0 1" Orientation="Vertical" VerticalAlignment="Top" Background="{x:Null}" Width="300">
                    <!--<uc:DigitalIOPanel x:Name="DigitalIOPanel" Style="{StaticResource PanelTopCard}" DataContext="{StaticResource IOController}"/>-->
                </StackPanel>
                <!--//-->
                <StackPanel Grid.Column="2" Grid.Row="1" Margin="0 1" Orientation="Vertical" VerticalAlignment="Top" Background="{x:Null}" Width="300">
                    <!--<TextBlock Text="123"/>-->
                </StackPanel>

            </Grid>
        </StackPanel>
    </Border>
    <!--#endregion-->
</StackPanel>

    
