<ctrl:CustomCard x:Class="MCAJawIns.Panel.ConfigPanel" 
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:app="clr-namespace:MCAJawIns"
                 xmlns:ctrl="clr-namespace:MCAJawIns.Control" 
                 mc:Ignorable="d" 
                 d:DesignHeight="450" 
                 d:DesignWidth="800"
                 Title="組態"
                 SubTitle="{Binding ConfigName, UpdateSourceTrigger=PropertyChanged, FallbackValue=Default}"
                 IconKind="FileCogOutline"
                 Style="{StaticResource {x:Type ctrl:CustomCard}}"
                 d:DataContext="{d:DesignInstance Type=app:BaslerCam}"
                 Loaded="CustomCard_Loaded">
    <ctrl:CustomCard.Resources>
        <!--//-->
        <app:BaslerConfig x:Key="BaslerConfig" Name="Default" />
    </ctrl:CustomCard.Resources>

    <DockPanel x:Name="Body">
        <TextBlock DockPanel.Dock="Left" Padding="0" FontSize="16" VerticalAlignment="Center" TextAlignment="Center">
            <!-- Resolution -->
            <Run>
                <Run.Text>
                    <Binding Path="Width" StringFormat="{}{0,4:D0}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" FallbackValue="0" />
                </Run.Text>
            </Run>
            <materialDesign:PackIcon Kind="Close" Height="12" Margin="4 0" VerticalAlignment="Center" />
            <Run>
                <Run.Text>
                    <Binding Path="Height" StringFormat="{}{0,4:D0}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" FallbackValue="0" />
                </Run.Text>
            </Run>
            <!-- FPS -->
            <Run>
                <Run.Text>
                    <Binding Path="FPS" StringFormat=", FPS: {0,5:F1}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" FallbackValue="{x:Null}" />
                </Run.Text>
            </Run>
        </TextBlock>

        <materialDesign:PopupBox x:Name="ConfigPopupBox" DockPanel.Dock="Right" HorizontalAlignment="Right" Padding="0" StaysOpen="True" PlacementMode="BottomAndAlignLeftEdges"
                materialDesign:RippleAssist.IsDisabled="True" materialDesign:ShadowAssist.ShadowDepth="Depth2" Opened="ConfigPopupBox_Opened" Closed="ConfigPopupBox_Closed">
            <!--IsEnabled="True"-->
            <materialDesign:PopupBox.IsEnabled>
                <MultiBinding Converter="{StaticResource BooleanAndGate}">
                    <Binding Path="IsOpen" FallbackValue="False" />
                    <Binding Path="IsGrabbing" Converter="{StaticResource BooleanInverter}" FallbackValue="False" />
                </MultiBinding>
            </materialDesign:PopupBox.IsEnabled>

            <materialDesign:PopupBox.ToggleContent>
                <Canvas Focusable="False" Style="{StaticResource ComplexPackIcon}">
                    <materialDesign:PackIcon Kind="CameraOutline" Width="26" Height="24" Foreground="{StaticResource ColorInfo}" />
                    <materialDesign:PackIcon Kind="Edit" Canvas.Right="0" Canvas.Bottom="0" Foreground="{StaticResource ColorSuccess}" />
                </Canvas>
            </materialDesign:PopupBox.ToggleContent>

            <Grid x:Name="ConfigGrid" Width="320" Background="#eee" MouseDown="Grid_MouseDown">
                <!--#region Resources -->
                <Grid.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Padding" Value="4 0" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                        <Setter Property="materialDesign:TextFieldAssist.TextFieldCornerRadius" Value="2" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="Margin" Value="8 8 8 8" />
                        <Setter Property="Width" Value="80" />
                    </Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                        <Setter Property="Margin" Value="8 8 8 8" />
                        <Setter Property="Padding" Value="5 3" />
                        <Setter Property="MaxDropDownHeight" Value="200" />
                    </Style>
                </Grid.Resources>
                <!--#endregion-->
                <!--#region Layout -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--//-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--#endregion-->

                <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                    <TextBlock Margin="8 8 8 0" Text="Configuration" Style="{StaticResource MaterialDesignHeadline6TextBlock}" />
                    <Separator Background="Black" Margin="8 0" />
                </StackPanel>
                <!-- Row 1, Config Selector -->
                <ComboBox x:Name="ConfigSelector" Grid.Row="1" Grid.ColumnSpan="1" MinWidth="135" materialDesign:HintAssist.Hint="Config" FontWeight="SemiBold"
                        materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                        materialDesign:HintAssist.Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid, AncestorLevel=1}, Path=Background}"
                        SelectedIndex="-1" SelectionChanged="ConfigSelector_SelectionChanged" ItemsSource="{Binding Path=ConfigList, Mode=OneWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0">
                                <TextBlock Text="{Binding}" Cursor="Hand" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Button Grid.Row="1" Grid.Column="1" x:Name="ConfigDelBtn" Margin="8 0" Content="刪除" Foreground="{StaticResource ColorOrange}"
                        Style="{StaticResource MaterialDesignToolButton}" Click="ConfigDelBtn_Click" />
                <!-- // -->

                <!-- Row 2, Width -->
                <TextBlock Grid.Row="2" Grid.Column="0" Margin="8 0 0 0" Text="Width" />
                <TextBox Grid.Row="2" Grid.Column="1" x:Name="ConfigWidth" Padding="0 3" materialDesign:TextFieldAssist.SuffixText="px"
                        Text="{Binding Path=Config.Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" GotFocus="Textbox_GotFocus" />
                <!-- Text="{Binding Path=Config.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"-->
                <!-- Row 3, Height -->
                <TextBlock Grid.Row="3" Grid.Column="0" Margin="8 0 0 0" Text="Height" />
                <TextBox Grid.Row="3" Grid.Column="1" x:Name="ConfigHeight" Padding="0 3" materialDesign:TextFieldAssist.SuffixText="px"
                        Text="{Binding Path=Config.Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" GotFocus="Textbox_GotFocus" />
                <!--    Text="{Binding Path=Config.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"-->
                <!-- Row 4, FPS -->
                <TextBlock Grid.Row="4" Grid.Column="0" Margin="8 0 0 0" Text="FPS" />
                <TextBox Grid.Row="4" Grid.Column="1" x:Name="ConfigFPS" Padding="0 3" Text="{Binding Path=Config.FPS, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                        GotFocus="Textbox_GotFocus" />
                <!--    Text="{Binding Path=Config.FPS, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:F1}}"-->
                <!-- Row 5, 曝光時間 -->
                <TextBlock Grid.Row="5" Grid.Column="0" Margin="8 0 0 0" Text="Exposure Time" />
                <TextBox Grid.Row="5" Grid.Column="1" x:Name="ConfigExposureTime" Padding="0 3" materialDesign:TextFieldAssist.SuffixText="ms"
                        materialDesign:TextFieldAssist.TextBoxViewMargin="10 0" Text="{Binding Path=Config.ExposureTime, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                        GotFocus="Textbox_GotFocus" />
                <!--    Text="{Binding Path=Config.ExposureTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"-->
                <!-- Row 6, 組態名稱 -->
                <TextBox Grid.Row="6" Grid.ColumnSpan="2" x:Name="ConfigName" Width="auto" Padding="0 3" materialDesign:HintAssist.Hint="Configuration Name"
                        materialDesign:HintAssist.Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid,AncestorLevel=1}, Path=Background}"
                        Text="{Binding Path=Config.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" GotFocus="Textbox_GotFocus" />
                <!--    Text="{Binding Path=Config.Name, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"-->
                <!-- Row 7, Action buttons -->
                <StackPanel Grid.Row="7" Grid.ColumnSpan="2" Orientation="Vertical">
                    <!-- // -->
                    <Separator Background="Black" Margin="8 0" />
                    <!-- // -->
                    <DockPanel Margin="8 0 8 8">
                        <materialDesign:Badged DataContext="{Binding}" d:DataContext="{d:DesignInstance Type=app:BaslerCam}">
                            <materialDesign:Badged.Style>
                                <Style TargetType="materialDesign:Badged">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Config.Saved}" Value="False">
                                            <Setter Property="Badge" Value="{materialDesign:PackIcon Kind=ContentSaveCogOutline}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Badge" Value="{materialDesign:PackIcon Kind=Check}" />
                                </Style>
                            </materialDesign:Badged.Style>

                            <Button DockPanel.Dock="Left" x:Name="ConfigSaveBtn" Padding="16 4" Content="儲存" Foreground="{StaticResource ColorPrimary}"
                                    Style="{StaticResource MaterialDesignToolButton}" Click="ConfigSaveBtn_Click" />
                        </materialDesign:Badged>

                        <Button DockPanel.Dock="Right" x:Name="ConfigCancelBtn" Padding="16 4" HorizontalAlignment="Right" Content="取消"
                                Command="{x:Static materialDesign:PopupBox.ClosePopupCommand}" Foreground="{StaticResource ColorError}"
                                Style="{StaticResource MaterialDesignToolButton}" />

                        <Button DockPanel.Dock="Right" x:Name="ConfigWriteBtn" Padding="16 4" HorizontalAlignment="Right" Content="寫入"
                                Command="{x:Static materialDesign:PopupBox.ClosePopupCommand}" Foreground="{StaticResource ColorSuccess}"
                                Style="{StaticResource MaterialDesignToolButton}" Click="ConfigWriteBtn_Click" />

                    </DockPanel>
                </StackPanel>
            </Grid>
        </materialDesign:PopupBox>
    </DockPanel>
</ctrl:CustomCard>
