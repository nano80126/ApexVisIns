<Window x:Class="ApexVisIns.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:ApexVisIns"
        xmlns:uc="clr-namespace:ApexVisIns.module"
        xmlns:content="clr-namespace:ApexVisIns.content"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}"
        mc:Ignorable="d"
        
        TextElement.Foreground="{StaticResource MaterialDesignLightForeground}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{StaticResource MaterialDesignFont}"
        Background="{StaticResource MaterialDesignPaper}"
        
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowState="Normal"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        Topmost="False"
        Title="MainWindow" Width="1600" Height="900">
    <Window.Resources>
        <!--#region Appbar -->
        <RoutedUICommand x:Key="QuitAction" Text="Quit"/>
        <RoutedUICommand x:Key="MinAction" Text="Min"/>
        <RoutedUICommand x:Key="MaxAction" Text="Max"/>
        <!--#endregion-->
        <!--#region Toobar -->
        <RoutedUICommand x:Key="OpenDevice" Text="Open Device"/>
        <RoutedUICommand x:Key="SingleShot" Text="Single Shot"/>
        <RoutedUICommand x:Key="ContinuousShot" Text="Continuous Shot"/>
        <RoutedUICommand x:Key="CrosshairOn" Text="Crosshair On"/>
        <RoutedUICommand x:Key="AssistRectOn" Text="Assist Rect On"/>
        <!--Tab-->
        <!-- 待刪除
        <RoutedUICommand x:Key="SwitchTab1" Text="Switch to Tab1"/>
        <RoutedUICommand x:Key="SwitchTab2" Text="Switch to Tab2"/>
        <RoutedUICommand x:Key="SwitchTab3" Text="Switch to Tab3"/>
        -->
        <RoutedUICommand x:Key="SwitchTab" Text="Switch Tab"/>
        <!--Global-->
        <RoutedUICommand x:Key="GlobalTest" Text="Test global command"/>
        <!--#endregion-->
        
        <!--#region Camera -->
        <!-- Camera 1
        <local:BaslerCam x:Key="BaslerCam" Width="2040" Height="2040">
            <local:BaslerCam.Config>
                <local:BaslerConfig Name="Default"/>
            </local:BaslerCam.Config>
        </local:BaslerCam>
        <local:CameraEnumer x:Key="CameraEnumer"/>-->
        <!--#endregion-->

        <!--#region Objects -->
        <!--Crosshair
        <local:Crosshair x:Key="Crosshair" Stroke="{StaticResource ColorDeepOrange}" Enable="False"/>-->
        <!--輔助 Rect
        <local:AssistRect x:Key="AssistRect" Enable="False" Stroke="{StaticResource ColorOrange}" StrokeThickness="3" />-->
        <!--輔助 Points
        <x:Array x:Key="AssistPoints" Type="local:AssistPoint">
            <local:AssistPoint X="0" Y="0" Enable="True" Stroke="{StaticResource ColorDeepPurple}" StrokeThickness="1.0"/>
            <local:AssistPoint X="0" Y="0" Enable="True" Stroke="{StaticResource ColorDeepPurple}" StrokeThickness="1.0"/>
            <local:AssistPoint X="0" Y="0" Enable="False" Stroke="DarkOrange" StrokeThickness="1.25"/>
            <local:AssistPoint X="50" Y="50" Enable="False" Stroke="DarkOrange" StrokeThickness="1.25"/>
        </x:Array>-->
        <!--輔助標示器
        <local:Indicator x:Key="Indicator"/>-->
        <!--Footer Bar Message
        <local:MsgInformer x:Key="MsgInformer"/>-->
        <!--#endregion-->

        <!--#region Module -->
        <!--<local:Thermometer x:Key="Thermometer" Interval="100"/>-->
        <!--#endregion-->
    </Window.Resources> 
    <!--//-->
    <Window.InputBindings>
        <!--Appbar-->
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{StaticResource QuitAction}"/>
        <KeyBinding Gesture="F10" Command="{StaticResource MinAction}"/>
        <KeyBinding Gesture="F11" Command="{StaticResource MaxAction}"/>
        <!--Toolbar-->
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{StaticResource OpenDevice}"/>
        <KeyBinding Key="F5" Command="{StaticResource SingleShot}"/>
        <KeyBinding Key="F6" Command="{StaticResource ContinuousShot}"/>
        <KeyBinding Key="F1" Command="{StaticResource CrosshairOn}"/>
        <KeyBinding Key="F2" Command="{StaticResource AssistRectOn}"/>
        <!--Tab-->
        <KeyBinding Modifiers="Ctrl" Key="D1" Command="{StaticResource SwitchTab}" CommandParameter="0"/><!--D1 means 1 -->
        <KeyBinding Modifiers="Ctrl" Key="D2" Command="{StaticResource SwitchTab}" CommandParameter="1"/><!--D2 means 2 -->
        <KeyBinding Modifiers="Ctrl" Key="D3" Command="{StaticResource SwitchTab}" CommandParameter="2"/><!--D3 means 3-->
        <KeyBinding Modifiers="Ctrl" Key="D4" Command="{StaticResource SwitchTab}" CommandParameter="3"/><!--D4 means 4-->
        <!--Config-->
        
        <!--Global-->
        <KeyBinding Modifiers="Ctrl" Key="G" Command="{StaticResource GlobalTest}"/>
    </Window.InputBindings>
    <!--//-->
    <Window.CommandBindings>
        <!--Appbar-->
        <CommandBinding Command="{StaticResource QuitAction}" CanExecute="QuitCanExecute" Executed="QuitCommand"/>
        <CommandBinding Command="{StaticResource MinAction}" CanExecute="CanExcute" Executed="MinCommand"/>
        <CommandBinding Command="{StaticResource MaxAction}" CanExecute="CanExcute" Executed="MaxCommand"/>
        <!--EngineerTab Toolbar-->
        <CommandBinding Command="{StaticResource OpenDevice}" CanExecute="OpenDeviceCanExecute" Executed="OpenDeviceCommand"/>
        <CommandBinding Command="{StaticResource SingleShot}" CanExecute="SingleShotCanExecute" Executed="SingleShotCommand"/>
        <CommandBinding Command="{StaticResource ContinuousShot}" CanExecute="ContinousShotCanExecute" Executed="ContinousShotCommand"/>
        <CommandBinding Command="{StaticResource CrosshairOn}" CanExecute="EngineerTabCanExcute" Executed="CrosshairOnCommnad"/>
        <CommandBinding Command="{StaticResource AssistRectOn}" CanExecute="EngineerTabCanExcute" Executed="AssisRectOnCommand"/>
        <!--Switch Tab-->
        <CommandBinding Command="{StaticResource SwitchTab}" CanExecute="CanExcute" Executed="SwitchTabCommand"/>
        <!--Config-->

        <!--Global-->
        <CommandBinding Command="{StaticResource GlobalTest}" CanExecute="CanExcute" Executed="GlobalTest" />
    </Window.CommandBindings> 
   
    <Border x:Name="MainBorder" HorizontalAlignment="Stretch" Style="{StaticResource MainWindowBorder}">
        <Grid>
            <Grid.RowDefinitions>
                <!--Appbar-->
                <RowDefinition Height="auto"/>
                <!--Content-->
                <RowDefinition Height="1*"/>
                <!--Footer-->
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <!--#region Appbar, Set focusale because needing to blur other control -->
            <Grid x:Name="TitleGrid" Grid.Row="0" Margin="5 3" Background="Transparent" MouseLeftButtonDown="TitleGrid_MouseLeftButtonDown" Focusable="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" HorizontalAlignment="Left" Height="30" Source="pack://application:,,,/intai.png" />
                <!--<TextBlock Grid.Column="0" Text="{Binding Title, FallbackValue=Default, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                           Style="{StaticResource MainWindowTitle}" VerticalAlignment="Center"/>-->

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Name="Minbtn" Content="{materialDesign:PackIcon Kind=WindowMinimize}" Margin="5 0" Click="Minbtn_Click" Style="{StaticResource WindowButton}"/>
                    <Button x:Name="Maxbtn" Margin="5 0" Click="Maxbtn_Click" Style="{StaticResource WindowButton}">
                        <materialDesign:PackIcon>
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WindowState, FallbackValue=Normal, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" Value="Maximized">
                                            <Setter Property="Kind" Value="WindowRestore"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Kind" Value="WindowMaximize"/>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                    </Button>
                    <Button x:Name="Quitbtn" Content="{materialDesign:PackIcon Kind=WindowClose}" Margin="5 0" Click="Quitbtn_Click" Style="{StaticResource WindowButton}"/>
                </StackPanel>
            </Grid>
            <!--#endregion-->
            <!--//-->
            <!--#region TabControl -->
            <TabControl x:Name="AppTabControl"
                        DockPanel.Dock="Top" Grid.Row="1"
                        VerticalAlignment="Stretch" 
                        Style="{StaticResource MaterialDesignNavigatilRailTabControl}" materialDesign:ColorZoneAssist.Mode="Custom" 
                        materialDesign:ColorZoneAssist.Background="{StaticResource ColorBrownTransparent}"
                        SelectedIndex="{Binding OnTabIndex, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <!--//-->
                <!--#region Main Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="ViewList" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>
                    
                    <content:MainTab x:Name="MainTab" Focusable="True" FocusVisualStyle="{x:Null}"/>
                </TabItem>
                <!--#endregion-->
                <!--//-->
                <!--#region Config Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="FileCog" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>
                    
                    <!--//-->
                    <content:DeviceTab x:Name="DeviceTab" Focusable="True" FocusVisualStyle="{x:Null}"/>
                </TabItem>
                <!--#endregion-->
                <!--//-->
                <!--#region Motion Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="Motion" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>
                    
                    <!--//-->
                    <content:MotionTab x:Name="MotionTab" Focusable="True" FocusVisualStyle="{x:Null}"/>
                </TabItem>
                <!--#endregion-->
                <!--//-->
                <!--#region Engineer Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}"
                         IsEnabled="{Binding DebugMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window, AncestorLevel=1}, Mode=OneTime}"
                         Visibility="{Binding DebugMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window, AncestorLevel=1}, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="HammerWrench" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>

                    <content:EngineerTab x:Name="EngineerTab" Focusable="True" FocusVisualStyle="{x:Null}" />
                </TabItem>
                <!--#endregion-->
            </TabControl>
            <!--#endregion-->
            <!--//-->
            <!--#region FooterBar -->
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" 
                        Grid.Row="2"
                        HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                        Background="{StaticResource ColorGrayTransparent}" FlowDirection="RightToLeft"
                        DataContext="{StaticResource MsgInformer}">
                <!--#region Error & Warning Popupbox -->
                <materialDesign:PopupBox x:Name="ErrPopupBox" HorizontalAlignment="Left" StaysOpen="True" materialDesign:RippleAssist.IsDisabled="True" 
                                         Padding="0" materialDesign:ShadowAssist.ShadowDepth="Depth1" TabIndex="-1"
                                         Opened="ErrPopupBox_Opened"
                                         Closed="PopupBox_Closed"
                                         PlacementMode="TopAndAlignRightEdges"
                                         FlowDirection="LeftToRight" Focusable="False">
                    <materialDesign:PopupBox.ToggleContent>
                        <StackPanel Orientation="Horizontal" Margin="12 0" Height="32">
                            <materialDesign:PackIcon Kind="Alert" Width="20" Height="20" VerticalAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewError, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>

                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="{Binding NewError}" FontSize="16">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewError, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </materialDesign:PopupBox.ToggleContent>
                    <!--//-->
                    <StackPanel Orientation="Vertical">
                        <ListView Width="480" MaxHeight="640"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"
                                  ItemsSource="{Binding ErrSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >

                            <ListView.Resources>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"/>
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="1 0 1 1"/>
                                    <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                                </Style>
                            </ListView.Resources>
                            <!--//-->
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn Header="Code" Width="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Code}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="360">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Description}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           TextWrapping="Wrap" Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <!--//-->
                        <Button x:Name="MessageClearBtn" Margin="0 12 0 0" HorizontalAlignment="Right" Click="MessageClearBtn_Click" Focusable="False"
                                Foreground="Gray" Style="{StaticResource MaterialDesignFlatButton}">
                            <!--
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Null}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            -->
                            <materialDesign:PackIcon Kind="TrashCan" Width="30" Height="26"/>
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
                <!--#endregion-->

                <!--#region Information Popupbox -->
                <materialDesign:PopupBox x:Name="InfoPopupbox" HorizontalAlignment="Left" StaysOpen="True" materialDesign:RippleAssist.IsDisabled="True"
                                         Padding="0" materialDesign:ShadowAssist.ShadowDepth="Depth1" TabIndex="-1"
                                         Opened="InfoPopupbox_Opened" 
                                         Closed="PopupBox_Closed"
                                         PlacementMode="TopAndAlignRightEdges"
                                         FlowDirection="LeftToRight" Focusable="False">
                    <materialDesign:PopupBox.ToggleContent>
                        <StackPanel Orientation="Horizontal" Margin="12 0" Height="32">
                            <materialDesign:PackIcon Kind="Information" Width="20" Height="20" VerticalAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewInfo, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>

                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="{Binding NewInfo}" FontSize="16" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewInfo, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </materialDesign:PopupBox.ToggleContent>
                    <!--//-->
                    <StackPanel Orientation="Vertical">
                        <ListView Width="480" MaxHeight="640" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                  ScrollViewer.CanContentScroll="True"
                                  ItemsSource="{Binding InfoSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.Resources>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="1 0 1 1"/>
                                    <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                                </Style>    
                            </ListView.Resources>
                            <!--//-->
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn Header="Code" Width="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Code}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="360">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Description}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           TextWrapping="Wrap" Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>    
                            </ListView.View>
                        </ListView>
                        <!--//-->
                        <Button x:Name="InfoClearBtn" Margin="0 12 0 0" HorizontalAlignment="Right" Click="InfoClearBtn_Click" Focusable="False" Foreground="Gray" Style="{StaticResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Kind="TrashCan" Width="30" Height="26"/>
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
                <!--#endregion-->
            </StackPanel>
            <!--#endregion-->
        </Grid>
    </Border>
</Window>
