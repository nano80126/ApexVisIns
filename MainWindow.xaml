<Window x:Class="ApexVisIns.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:ApexVisIns"
        xmlns:bfr="clr-namespace:ApexVisIns.BFR"
        xmlns:uc="clr-namespace:ApexVisIns.module"
        xmlns:content="clr-namespace:ApexVisIns.content"
        mc:Ignorable="d"
        
        TextElement.Foreground="{StaticResource MaterialDesignLightForeground}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{StaticResource MaterialDesignFont}"
        Background="{StaticResource MaterialDesignPaper}"
        
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowState="Normal"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        Title="MainWindow" Width="1600" Height="900">
    <Window.Resources>
        <!--#region Appbar -->
        <RoutedUICommand x:Key="QuitAction" Text="Quit"/>
        <RoutedUICommand x:Key="MinAction" Text="Min"/>
        <RoutedUICommand x:Key="MaxAction" Text="Max"/>
        <!--#endregion-->
        <!--#region Toobar -->
        <RoutedUICommand x:Key="OpenDevice" Text="Open Device"/>
        <RoutedUICommand x:Key="SingleShot" Text="Single Shot"/>
        <RoutedUICommand x:Key="ContinuousShot" Text="Continuous Shot"/>
        <RoutedUICommand x:Key="CrosshairOn" Text="Crosshair On"/>
        <RoutedUICommand x:Key="AssistRectOn" Text="Assist Rect On"/>
        <!--Tab-->
        <RoutedUICommand x:Key="SwitchTab1" Text="Switch to Tab1"/>
        <RoutedUICommand x:Key="SwitchTab2" Text="Switch to Tab2"/>
        <RoutedUICommand x:Key="SwitchTab3" Text="Switch to Tab3"/>
        <!--#endregion-->
        
        <!--#region Camera -->
        <!-- Camera 1
        <local:BaslerCam x:Key="BaslerCam" Width="2040" Height="2040">
            <local:BaslerCam.Config>
                <local:BaslerConfig Name="Default"/>
            </local:BaslerCam.Config>
        </local:BaslerCam>
        <local:CameraEnumer x:Key="CameraEnumer"/>-->
        
        
        <!--#endregion-->

        <!--#region Objects -->
        <!--Crosshair
        <local:Crosshair x:Key="Crosshair" Stroke="{StaticResource ColorDeepOrange}" Enable="False"/>-->
        <!--輔助 Rect
        <local:AssistRect x:Key="AssistRect" Enable="False" Stroke="{StaticResource ColorOrange}" StrokeThickness="3" />-->
        <!--輔助 Points
        <x:Array x:Key="AssistPoints" Type="local:AssistPoint">
            <local:AssistPoint X="0" Y="0" Enable="True" Stroke="{StaticResource ColorDeepPurple}" StrokeThickness="1.0"/>
            <local:AssistPoint X="0" Y="0" Enable="True" Stroke="{StaticResource ColorDeepPurple}" StrokeThickness="1.0"/>
            <local:AssistPoint X="0" Y="0" Enable="False" Stroke="DarkOrange" StrokeThickness="1.25"/>
            <local:AssistPoint X="50" Y="50" Enable="False" Stroke="DarkOrange" StrokeThickness="1.25"/>
        </x:Array>-->
        <!--輔助標示器
        <local:Indicator x:Key="Indicator"/>-->
        <!--Footer Bar Message
        <local:MsgInformer x:Key="MsgInformer"/>-->
        <!--#endregion-->

        <!--#region Module -->
        <!--<local:Thermometer x:Key="Thermometer" Interval="100"/>-->
        <!--#endregion-->

        <!--#region BFR -->
        <bfr:Trail x:Key="BFRTrail"/>
        <!--<bfr:BFR x:Key="BFR"/>-->
        <!--#endregion-->
    </Window.Resources> 
    <!--//-->
    <Window.InputBindings>
        <!--Appbar-->
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{StaticResource QuitAction}"/>
        <KeyBinding Gesture="F10" Command="{StaticResource MinAction}"/>
        <KeyBinding Gesture="F11" Command="{StaticResource MaxAction}"/>
        <!--Toolbar-->
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{StaticResource OpenDevice}"/>
        <KeyBinding Key="F5" Command="{StaticResource SingleShot}"/>
        <KeyBinding Key="F6" Command="{StaticResource ContinuousShot}"/>
        <KeyBinding Key="F1" Command="{StaticResource CrosshairOn}"/>
        <KeyBinding Key="F2" Command="{StaticResource AssistRectOn}"/>
        <!--Tab-->
        <KeyBinding Modifiers="Ctrl" Key="D1" Command="{StaticResource SwitchTab1}"/><!--D1 means 1 -->
        <KeyBinding Modifiers="Ctrl" Key="D2" Command="{StaticResource SwitchTab2}"/><!--D2 means 2 -->
        <KeyBinding Modifiers="Ctrl" Key="D3" Command="{StaticResource SwitchTab3}"/><!--D3 means 3-->
        <!--Config-->
    </Window.InputBindings>
    <!--//-->
    <Window.CommandBindings>
        <!--Appbar-->
        <CommandBinding Command="{StaticResource QuitAction}" CanExecute="QuitCanExecute" Executed="QuitCommand"/>
        <CommandBinding Command="{StaticResource MinAction}" CanExecute="CanExcute" Executed="MinCommand"/>
        <CommandBinding Command="{StaticResource MaxAction}" CanExecute="CanExcute" Executed="MaxCommand"/>
        <!--Toolbar-->
        <CommandBinding Command="{StaticResource OpenDevice}" CanExecute="OpenDeviceCanExecute" Executed="OpenDeviceCommand"/>
        <CommandBinding Command="{StaticResource SingleShot}" CanExecute="SingleShotCanExecute" Executed="SingleShotCommand"/>
        <CommandBinding Command="{StaticResource ContinuousShot}" CanExecute="ContinousShotCanExecute" Executed="ContinousShotCommand"/>
        <CommandBinding Command="{StaticResource CrosshairOn}" CanExecute="CanExcute" Executed="CrosshairOnCommnad"/>
        <CommandBinding Command="{StaticResource AssistRectOn}" CanExecute="CanExcute" Executed="AssisRectOnCommand"/>
        <!--Switch Tab-->
        <CommandBinding Command="{StaticResource SwitchTab1}" CanExecute="CanExcute" Executed="SwitchTab1Command"/>
        <CommandBinding Command="{StaticResource SwitchTab2}" CanExecute="CanExcute" Executed="SwitchTab2Command"/>
        <CommandBinding Command="{StaticResource SwitchTab3}" CanExecute="CanExcute" Executed="SwitchTab3Command"/>
        <!--Config-->
    </Window.CommandBindings> 
   
    <Border x:Name="MainBorder" HorizontalAlignment="Stretch" Style="{StaticResource MainWindowBorder}">
        <Grid>
            <Grid.RowDefinitions>
                <!--Appbar-->
                <RowDefinition Height="auto"/>
                <!--Content-->
                <RowDefinition Height="1*"/>
                <!--Footer-->
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <!--#region Appbar, Set focusale because needing to blur other control -->
            <Grid x:Name="TitleGrid" Grid.Row="0" Margin="5 3" Background="Transparent" MouseLeftButtonDown="TitleGrid_MouseLeftButtonDown" Focusable="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" HorizontalAlignment="Left" Height="30" Source="pack://application:,,,/intai.png" />
                <!--<TextBlock Grid.Column="0" Text="{Binding Title, FallbackValue=Default, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                           Style="{StaticResource MainWindowTitle}" VerticalAlignment="Center"/>-->

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Name="Minbtn" Content="{materialDesign:PackIcon Kind=WindowMinimize}" Margin="5 0" Click="Minbtn_Click" Style="{StaticResource WindowButton}"/>
                    <Button x:Name="Maxbtn" Margin="5 0" Click="Maxbtn_Click" Style="{StaticResource WindowButton}">
                        <materialDesign:PackIcon>
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WindowState, FallbackValue=Normal, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" Value="Maximized">
                                            <Setter Property="Kind" Value="WindowRestore"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Kind" Value="WindowMaximize"/>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                    </Button>
                    <Button x:Name="Quitbtn" Content="{materialDesign:PackIcon Kind=WindowClose}" Margin="5 0" Click="Quitbtn_Click" Style="{StaticResource WindowButton}"/>
                </StackPanel>
            </Grid>
            <!--#endregion-->
            <!--//-->
            <!--#region TabControl -->
            <TabControl DockPanel.Dock="Top" Grid.Row="1"
                        VerticalAlignment="Stretch" 
                        Style="{StaticResource MaterialDesignNavigatilRailTabControl}" materialDesign:ColorZoneAssist.Mode="Custom" 
                        materialDesign:ColorZoneAssist.Background="{StaticResource ColorBrownTransparent}"
                        SelectedIndex="{Binding OnTabIndex, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                
                
                <!--#region Image Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="ImageArea" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>

                    <StackPanel x:Name="Tab1Panel" Orientation="Vertical" UseLayoutRounding="True" >
                        <!--#region Toolbar -->
                        <DockPanel x:Name="Tab1ToolBarDockPanel" HorizontalAlignment="Stretch" Background="#22969696">
                            <!--#region MainToolBar -->
                            <ToolBarTray DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Left" ClipToBounds="True" UseLayoutRounding="True" Background="{x:Null}" Margin="0">
                                <ToolBar x:Name="MainToolbar" Style="{StaticResource MaterialDesignToolBar}" VerticalAlignment="Center" Background="{x:Null}"
                                         Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                                    <ToolBar.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush" Value="DarkBlue"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="CornerRadius" Value="2"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="0 2"/>
                                        </Style>
                                    </ToolBar.Resources>

                                    <!--相機選擇-->
                                    <ComboBox x:Name="CamSelector" Style="{StaticResource MaterialDesignOutlinedComboBox}" 
                                              Padding="5 4" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              materialDesign:HintAssist.Hint="Camera" 
                                              materialDesign:ComboBoxAssist.ShowSelectedItem="False"
                                              IsEnabled="{Binding ElementName=CamConnect, Path=IsChecked, Converter={StaticResource BooleanInverter}}"
                                              ItemsSource="{Binding CamsSource, Source={StaticResource CameraEnumer}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                                              MinWidth="135" Margin="0 0 12 0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock TextAlignment="Right" Text="{Binding Model, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <!--開啟相機-->
                                    <ToggleButton x:Name="CamConnect" ToolTip="(Ctrl+O) Open Device" MinWidth="45"
                                      Cursor="Hand" Focusable="False" IsChecked="False" Background="LimeGreen" Checked="CamConnect_Checked" Unchecked="CamConnect_Unchecked">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=CamSelector, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <!--//-->
                                    <Separator/>
                                    <!--單張擷取-->
                                    <Button Name="SingleShot" VerticalAlignment="Center" Click="SingleShot_Click" Focusable="False" Foreground="Black" 
                                            ToolTip="(F5) Single Shot" Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource BooleanAndGate}">
                                                <Binding Path="IsOpen" Source="{StaticResource BaslerCam}" FallbackValue="False" Mode="OneWay"/>
                                                <Binding Path="IsGrabbing" Source="{StaticResource BaslerCam}" Converter="{StaticResource BooleanInverter}" FallbackValue="False" Mode="OneWay"></Binding>
                                            </MultiBinding>
                                        </Button.IsEnabled>

                                        <materialDesign:PackIcon Width="30" Height="26">
                                            <materialDesign:PackIcon.Style>
                                                <Style TargetType="materialDesign:PackIcon">
                                                    <Setter Property="Kind" Value="CameraOutline"/>
                                                </Style>
                                            </materialDesign:PackIcon.Style>
                                        </materialDesign:PackIcon>
                                    </Button>
                                    <!--連續擷取-->
                                    <Button x:Name="ContinouseShot" VerticalAlignment="Center" Click="ContinouseShot_Click" Focusable="False" Foreground="Black"
                                            IsEnabled="{Binding IsOpen, Source={StaticResource BaslerCam}, FallbackValue=False}"
                                            ToolTip="(F6) Continuous Shot" Style="{StaticResource MaterialDesignFlatButton}">
                                        <!--IsEnabled="{Binding IsOpen, Source={StaticResource BaslerCam}, FallbackValue=False}"-->
                                        <materialDesign:PackIcon Width="30" Height="26">
                                            <materialDesign:PackIcon.Style>
                                                <Style TargetType="materialDesign:PackIcon">
                                                    <Style.Triggers>
                                                        <!--
                                                        <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False}" Value="True">
                                                            <Setter Property="Kind" Value="VideocamOffOutline"/>
                                                        </DataTrigger>
                                                        -->
                                                        <DataTrigger Binding="{Binding IsGrabbing, Source={StaticResource BaslerCam}, FallbackValue=False}" Value="True">
                                                            <Setter Property="Kind" Value="VideocamOffOutline"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Kind" Value="VideoOutline"/>
                                                </Style>
                                            </materialDesign:PackIcon.Style>
                                        </materialDesign:PackIcon>
                                    </Button>
                                    <!--//-->
                                    <Separator/>
                                    <!--解析度 (Resolution)-->
                                    <Border>
                                        <TextBlock Padding="5 0" FontSize="16" TextAlignment="Center">
                                            <Run Text="{Binding Width, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}"/>
                                            <materialDesign:PackIcon Kind="Close" Height="12" Margin="5 0" VerticalAlignment="Center"/>
                                            <Run Text="{Binding Height, ElementName=ImageCanvas, Mode=OneWay, FallbackValue=0}"/>
                                        </TextBlock>
                                    </Border>
                                    <!--//-->
                                    <Separator/>
                                    <!--縮放率 (Zoom Ratio)-->
                                    <Border>
                                        <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" MouseLeftButtonDown="RatioTextblock_MouseLeftButtonDown">
                                            <Run Text="{Binding ZoomRatio, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                                Mode=OneWay, FallbackValue=100, StringFormat={}{0:F0}, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Run Text="%"/>
                                        </TextBlock>
                                    </Border>
                                    <!--//-->
                                    <Separator/>
                                    <!--影像張數 (Frames)-->
                                    <Border>
                                        <TextBlock Padding="5 0" FontSize="16" MinWidth="50" TextAlignment="Center" Text="{Binding Frames, Source={StaticResource BaslerCam}, Mode=OneWay, FallbackValue=0}"/>
                                    </Border>
                                    <!--//-->
                                    <Separator/>
                                    <!--Tab Index-->
                                    <!--<ListBox x:Name="TabSelector" SelectedIndex="{Binding OnTabIndex, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             SelectionMode="Single" SelectionChanged="TabSelector_SelectionChanged" materialDesign:ListBoxAssist.IsToggle="False"
                                             materialDesign:RippleAssist.IsDisabled="True">
                                        <ListBoxItem Padding="16 4">
                                            <materialDesign:PackIcon Kind="ImageArea" Width="30" Height="26"/>
                                        </ListBoxItem>
                                        <ListBoxItem Padding="16 4">
                                            <materialDesign:PackIcon Kind="ViewList" Width="30" Height="26"/>
                                        </ListBoxItem>
                                    </ListBox>
                                    -->
                                    <!--//-->
                                    <!--
                                    <Separator/>-->
                                    <!--切換Crosshair-->
                                    <Button VerticalAlignment="Center" Click="ToggleCrosshair_Click" ToolTip="(F1) Show Crosshair" materialDesign:RippleAssist.IsDisabled="True" Height="36">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Enable, Source={StaticResource Crosshair}}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                                        <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Foreground" Value="Black"/>
                                            </Style>
                                        </Button.Style>
                                        <materialDesign:PackIcon Kind="TargetVariant" Width="30" Height="26"/>
                                    </Button>
                                    <!--輔助方塊-->
                                    <Button VerticalAlignment="Center" Click="ToggleAssistRect_Click" ToolTip="(F2) Show Assist Rectangle" materialDesign:RippleAssist.IsDisabled="True" Height="36">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Enable, Source={StaticResource AssistRect}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                                        <Setter Property="Background" Value="{StaticResource ColorGrayTransparent}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Foreground" Value="Black"/>
                                            </Style>
                                        </Button.Style>
                                        <materialDesign:PackIcon Kind="SquareOutline" Width="30" Height="26"/>
                                    </Button>
                                    <!--//-->
                                    <Separator/>

                                    <!--#region Test region Test region Test region Test region Test region Test region Test region Test region Test region -->
                                    <!--<TextBlock VerticalAlignment="Center" Text="{Binding ElementName=ConfigName, Path=Text}"/>-->
                                    <!--<TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource BaslerCam}, Path=Config.Name}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource BaslerCam}, Path=ConfigName}"/>-->

                                    <!--<TextBlock VerticalAlignment="Center" Text="{Binding ElementName=ImageScroller, Path=ActualHeight}"/>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=MainToolbar, Path=ActualHeight}"/>-->

                                    <Button Margin="50 0 0 0" VerticalAlignment="Center" Click="Button_Click" Style="{StaticResource MaterialDesignFlatButton}">
                                        <materialDesign:PackIcon Kind="Thermometer" Width="30" Height="26"/>
                                    </Button>
                                    <!--<TextBlock VerticalAlignment="Center" Text="{Binding Path=Temperature, Source={StaticResource Thermometer}, UpdateSourceTrigger=PropertyChanged}"/>-->

                                    <!--#endregion-->
                                </ToolBar>
                            </ToolBarTray>
                            <!--#endregion-->
                            <!--#region SubToolBar -->
                            <ToolBarTray DockPanel.Dock="Right" FlowDirection="RightToLeft" VerticalAlignment="Center" HorizontalAlignment="Right" ClipToBounds="True" UseLayoutRounding="True" 
                                         Background="{x:Null}" Margin="0">

                                <ToolBar x:Name="SubToolbar" Style="{StaticResource MaterialDesignToolBar}" VerticalAlignment="Center" Background="{x:Null}"
                                         Height="38" ToolBarTray.IsLocked="True" Focusable="False">
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Cursor="Hand">
                                        <materialDesign:PackIcon Kind="Cog" Width="30" Height="26"/>
                                    </Button>

                                    <!--<TextBlock Margin="5 0" VerticalAlignment="Center" Text="{Binding ElementName=Tab1Grid, Path=ActualHeight}" />
                                    <TextBlock Margin="5 0" VerticalAlignment="Center" Text="{Binding ElementName=Tab2Grid, Path=ActualHeight}" />
                                    <TextBlock Margin="5 0" VerticalAlignment="Center" Text="{Binding ElementName=AssistFooter, Path=ActualHeight}" />-->
                                </ToolBar>
                            </ToolBarTray>
                            <!--#endregion-->
                        </DockPanel>
                        <!--#endregion-->
                        <!--//-->
                        <!--#region Content -->
                        <Border x:Name="AppContentBorder" BorderBrush="{StaticResource ColorGray}" BorderThickness="0 1">
                            <StackPanel x:Name="AppContent" Orientation="Vertical" HorizontalAlignment="Stretch" Margin="1 0" UseLayoutRounding="True">
                                <!--<TabControl x:Name="AppTabControl" Margin="0 4 0 0" Padding="0" BorderThickness="1" BorderBrush="{StaticResource ColorBrown}"
                            SelectedIndex="{Binding OnTabIndex, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" HorizontalAlignment="Stretch">-->
                                <!--#region Tab1 -->
                                <!--<TabItem Header="{x:Null}" Height="0">-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <!--#region Image Panel -->
                                    <Border x:Name="ImageBorder" Grid.Column="1" Grid.RowSpan="2" BorderThickness="1 0 1 0 " BorderBrush="{StaticResource ColorOrange}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <StackPanel Orientation="Vertical" >
                                            <Grid x:Name="ImageGrid">
                                                <ScrollViewer x:Name="ImageScroller" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                                                  Background="{x:Null}" PreviewMouseWheel="ImageScroller_PreviewMouseWheel">
                                                    <ScrollViewer.Style>
                                                        <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerSuccess}">
                                                            <Setter Property="Height" Value="720"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Mode=OneWay}" Value="Maximized">
                                                                    <Setter Property="Height" Value="900"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ScrollViewer.Style>

                                                    <Viewbox x:Name="ImageViewbox">
                                                        <Canvas x:Name="ImageCanvas" Background="{StaticResource ColorGrayTransparent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                                Width="{Binding Width, Source={StaticResource BaslerCam}, UpdateSourceTrigger=PropertyChanged}" 
                                                                Height="{Binding Height, Source={StaticResource BaslerCam}, UpdateSourceTrigger=PropertyChanged}"
                                                                PreviewMouseDown="ImageCanvas_MouseDown" PreviewMouseUp="ImageCanvas_MouseUp" PreviewMouseMove="ImageCanvas_MouseMove"
                                                                MouseLeave="ImageCanvas_MouseLeave">

                                                            <!-- 綁定 camera -->
                                                            <Image x:Name="WpfImage" Canvas.Left="0" Canvas.Top="0" Stretch="UniformToFill" 
                                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                    Source="{Binding ImageSource, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>

                                                            <!--#region Assist Rectangle -->
                                                            <Rectangle x:Name="AssistRectangle" DataContext="{StaticResource AssistRect}"  
                                                                   Stroke="{Binding Stroke, FallbackValue={StaticResource ColorDeepOrange}}"
                                                                   StrokeThickness="{Binding StrokeThickness}" 
                                                                   Canvas.Left="{Binding X, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" 
                                                                   Canvas.Top="{Binding Y, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                                                   Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}"
                                                                   Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, FallbackValue=10}" 
                                                                   Visibility="{Binding Enable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
                                                            </Rectangle>
                                                            <!--#endregion-->

                                                            <!--鈹銅線圈用 ROI (保留)-->

                                                            <!--//-->

                                                            <!--#region Crosshair Lines -->
                                                            <!-- Horizontal, 綁定 ImageCanvas (X1, X2, Y1, Y2)  & CrosshairOn (Visibility) -->
                                                            <Line x:Name="CrosshairH" 
                                                                X1="0" X2="{Binding ElementName=ImageCanvas, Path=Width,Mode=OneWay}"
                                                                Y1="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                                Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                                Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                                                Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}" />
                                                            <!-- Vertical, 綁定 ImageCanvas (X1, X2, Y1, Y2)  & CrosshairOn (Visibility) -->
                                                            <Line x:Name="CrosshairV" 
                                                                X1="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}" 
                                                                X2="{Binding ElementName=ImageCanvas, Path=Width, Mode=OneWay, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.5}"
                                                                Y1="0" Y2="{Binding ElementName=ImageCanvas, Path=Height, Mode=OneWay}"
                                                                Stroke="{Binding Stroke, Source={StaticResource Crosshair}}" StrokeThickness="1" StrokeDashArray="2 3 5 3"
                                                                Visibility="{Binding Enable, Source={StaticResource Crosshair}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}"/>
                                                            <!--#endregion-->

                                                            <!--#region H & V Assistant Line-->
                                                            <!--#endregion-->

                                                            <!--#region Assistant Points -->
                                                            <ItemsControl ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged, Source={StaticResource AssistPoints}}">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <Canvas/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <ItemsControl.ItemContainerStyle>
                                                                    <Style TargetType="ContentPresenter">
                                                                    </Style>
                                                                </ItemsControl.ItemContainerStyle>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Grid>
                                                                            <Line X1="{Binding X, Mode=OneWay, Converter={StaticResource MathPlusConverter}, ConverterParameter=50, UpdateSourceTrigger=PropertyChanged}" 
                                                                                X2="{Binding X, Mode=OneWay, Converter={StaticResource MathPlusConverter}, ConverterParameter=-50, UpdateSourceTrigger=PropertyChanged}"
                                                                                Y1="{Binding Y, Mode=OneWay}" Y2="{Binding Y, Mode=OneWay}"
                                                                                Visibility="{Binding Enable, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False}"
                                                                                Stroke="{Binding Stroke}" StrokeThickness="{Binding StrokeThickness}" />

                                                                            <Line X1="{Binding X, Mode=OneWay}" X2="{Binding X, Mode=OneWay}"
                                                                                Y1="{Binding Y, Mode=OneWay, Converter={StaticResource MathPlusConverter}, ConverterParameter=50, UpdateSourceTrigger=PropertyChanged}" 
                                                                                Y2="{Binding Y, Mode=OneWay, Converter={StaticResource MathPlusConverter}, ConverterParameter=-50, UpdateSourceTrigger=PropertyChanged}"
                                                                                Visibility="{Binding Enable, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False}"
                                                                                Stroke="{Binding Stroke}" StrokeThickness="{Binding StrokeThickness}" />
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                            <!--#endregion-->
                                                        </Canvas>
                                                    </Viewbox>
                                                </ScrollViewer>
                                            </Grid>

                                            <!--#region ImageFooter -->
                                            <DockPanel x:Name="AssistFooter" HorizontalAlignment="Stretch" Margin="0" Height="20" MinWidth="20" Background="{x:Null}">
                                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{StaticResource Indicator}">
                                                    <TextBlock VerticalAlignment="Center" TextAlignment="Center" MinWidth="120" FontSize="16" FontFamily="consolas">
                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0,4:D} , {1,4:D}">
                                                                <Binding Path="X" FallbackValue="0" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                                                <Binding Path="Y" FallbackValue="0" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </StackPanel>
                                                <!--//-->
                                                <Separator DockPanel.Dock="Left" Width="1" Height="12" Margin="12 0" Background="Gray" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                                                <!--//-->
                                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Right" DataContext="{StaticResource Indicator}">
                                                    <StackPanel.Resources>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="Margin" Value="0 0 15 0"/>
                                                            <Setter Property="TextAlignment" Value="Center"/>
                                                            <Setter Property="MinWidth" Value="65"/>
                                                            <Setter Property="FontSize" Value="16"/>
                                                            <Setter Property="FontFamily" Value="consolas"/>
                                                        </Style>
                                                    </StackPanel.Resources>
                                                    <!--Text="{Binding R, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=R: {0:0}, FallbackValue=0}"-->
                                                    <TextBlock Foreground="Red">
                                                        <TextBlock.Text>
                                                            <Binding Path="R" UpdateSourceTrigger="PropertyChanged" StringFormat="R: {0,3:D}" FallbackValue="0"/>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <!--Text="{Binding G, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=G: {0:0}, FallbackValue=0}"-->
                                                    <TextBlock Foreground="Green">
                                                        <TextBlock.Text>
                                                            <Binding Path="G" UpdateSourceTrigger="PropertyChanged" StringFormat="G: {0,3:D}" FallbackValue="0"/>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <!--Text="{Binding B, Source={StaticResource Indicator}, UpdateSourceTrigger=PropertyChanged, StringFormat=B: {0:0}, FallbackValue=0}"-->
                                                    <TextBlock Foreground="Blue">
                                                        <TextBlock.Text>
                                                            <Binding Path="B" UpdateSourceTrigger="PropertyChanged" StringFormat="B: {0,3:D}" FallbackValue="0"/>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </StackPanel>

                                                <!--// 輔助 Rect 使用 (靠右)-->
                                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{StaticResource AssistRect}">
                                                    <StackPanel.Resources>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="Margin" Value="0 0 15 0"/>
                                                            <Setter Property="TextAlignment" Value="Center"/>
                                                            <Setter Property="MinWidth" Value="65"/>
                                                            <Setter Property="FontSize" Value="16"/>
                                                            <Setter Property="FontFamily" Value="consolas"/>
                                                        </Style>
                                                    </StackPanel.Resources>

                                                    <TextBlock Text="{Binding X, UpdateSourceTrigger=PropertyChanged, StringFormat=X: {0:0}, FallbackValue=0}"/>
                                                    <TextBlock Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, StringFormat=Y: {0:0}, FallbackValue=0}"/>
                                                    <TextBlock Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, StringFormat=W: {0:0}, FallbackValue=0}"/>
                                                    <TextBlock Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, StringFormat=H: {0:0}, FallbackValue=0}"/>
                                                </StackPanel>
                                            </DockPanel>
                                            <!--#endregion-->
                                        </StackPanel>
                                    </Border>
                                    <!--#endregion-->

                                    <!--#region Left Top Panel, Config and offset panel -->
                                    <StackPanel Grid.Column="0" Grid.Row="0" Margin="0 1" Orientation="Vertical" VerticalAlignment="Top" Background="{x:Null}" Width="300" >
                                        <!--Configuration-->
                                        <uc:ConfigPanel x:Name="ConfigPanel" Style="{StaticResource PanelTopCard}" DataContext="{StaticResource BaslerCam}"/>
                                        <!--Offset-->
                                        <uc:OffsetPanel x:Name="OffsetPanel" Style="{StaticResource PanelTopCard}"/>
                                    </StackPanel>
                                    <!--#endregion-->

                                    <!--#region Left Bottom Panel -->
                                    <StackPanel Grid.Column="0" Grid.Row="1" Margin="0 1" Orientation="Vertical" VerticalAlignment="Bottom" Background="{x:Null}" Width="300" >
                                        <!--BFR testing-->
                                        <uc:BFRTestingPanel x:Name="BFRTestingPanel" Style="{StaticResource PanelBottomCard}" DataContext="{StaticResource BFRTrail}"/>
                                    </StackPanel>
                                    <!--#endregion-->

                                    <!--#region Right Top Panel -->
                                    <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Vertical" VerticalAlignment="Top" Background="{x:Null}" Width="300">
                                        <!--Thermometer-->
                                        <uc:ThermometerPanel x:Name="ThermometerPanel" Background="FloralWhite" Style="{StaticResource PanelTopCard}"/>
                                        <!--Points-->
                                        <uc:PointsPanel x:Name="PointsPanel" Background="FloralWhite" Style="{StaticResource PanelTopCard}" DataContext="{StaticResource AssistPoints}"/>
                                    </StackPanel>
                                    <!--#endregion-->

                                    <!--#region Right Bottom Panel -->
                                    <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Vertical" VerticalAlignment="Bottom" Background="{x:Null}" Width="300">
                                        <!-- // -->
                                        <uc:StatusPanel x:Name="StatusPanel" Background="FloralWhite" Style="{StaticResource PanelBottomCard}" DataContext="{StaticResource BFRTrail}"/>
                                        <!-- // -->
                                        
                                    </StackPanel>
                                    <!--#endregion-->
                                </Grid>
                                <!--</TabItem>-->

                                <!--<TabItem Header="{x:Null}" Height="0">
                                    <tab:DataList x:Name="Tab2Grid" DataContext="{StaticResource BFRTrail}"/>
                                </TabItem>-->

                                <!--#endregion-->
                                <!--</TabControl>-->
                            </StackPanel>
                        </Border>
                        <!--#endregion-->
                        <!--//-->
                    </StackPanel>
                </TabItem>
                <!--#endregion-->
                <!--//-->
                <!--#region Main Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="ViewList" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>
                    <content:MainTab x:Name="MainTab"/>
                    <!--<StackPanel x:Name="Tab2Panel" Orientation="Vertical" UseLayoutRounding="True">
                    </StackPanel>-->
                </TabItem>
                <!--#endregion-->
                <!--//-->
                <!--#region Programming Tab -->
                <TabItem Width="48" Height="48" Margin="0 0 0 8" Style="{StaticResource MaterialDesignNavigationRailTabItem}">
                    <TabItem.Header>
                        <materialDesign:PackIcon Kind="Cogs" Width="30" Height="26" Foreground="White"/>
                    </TabItem.Header>

                    <content:DebugTab x:Name="DebugTab"/>
                </TabItem>
                <!--#endregion-->
            </TabControl>
            <!--#endregion-->
            <!--//-->
            <!--#region FooterBar -->
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" 
                        Grid.Row="2"
                        HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                        Background="{StaticResource ColorGrayTransparent}" FlowDirection="RightToLeft"
                        DataContext="{StaticResource MsgInformer}">
                <!--#region Error & Warning Popupbox -->
                <materialDesign:PopupBox x:Name="ErrPopupBox" HorizontalAlignment="Left" StaysOpen="True" materialDesign:RippleAssist.IsDisabled="True" 
                                         Padding="0" materialDesign:ShadowAssist.ShadowDepth="Depth1" TabIndex="-1"
                                         Opened="ErrPopupBox_Opened"
                                         Closed="PopupBox_Closed"
                                         PlacementMode="TopAndAlignRightEdges"
                                         FlowDirection="LeftToRight" Focusable="False">
                    <materialDesign:PopupBox.ToggleContent>
                        <StackPanel Orientation="Horizontal" Margin="12 0" Height="32">
                            <materialDesign:PackIcon Kind="Alert" Width="20" Height="20" VerticalAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewError, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>

                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="{Binding NewError}" FontSize="16">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewError, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </materialDesign:PopupBox.ToggleContent>
                    <!--//-->
                    <StackPanel Orientation="Vertical">
                        <ListView Width="480" MaxHeight="640"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"
                                  ItemsSource="{Binding ErrSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >

                            <ListView.Resources>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="{StaticResource ColorDeepOrange}"/>
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="1 0 1 1"/>
                                    <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                                </Style>
                            </ListView.Resources>
                            <!--//-->
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn Header="Code" Width="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Code}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="360">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Description}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           TextWrapping="Wrap" Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <!--//-->
                        <Button x:Name="MessageClearBtn" Margin="0 12 0 0" HorizontalAlignment="Right" Click="MessageClearBtn_Click" Focusable="False"
                                Foreground="Gray"
                                Style="{StaticResource MaterialDesignFlatButton}">
                            <!--
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Null}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            -->
                            <materialDesign:PackIcon Kind="TrashCan" Width="30" Height="26"/>
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
                <!--#endregion-->

                <!--#region Information Popupbox -->
                <materialDesign:PopupBox x:Name="InfoPopupbox" HorizontalAlignment="Left" StaysOpen="True" materialDesign:RippleAssist.IsDisabled="True"
                                         Padding="0" materialDesign:ShadowAssist.ShadowDepth="Depth1" TabIndex="-1"
                                         Opened="InfoPopupbox_Opened" 
                                         Closed="PopupBox_Closed"
                                         PlacementMode="TopAndAlignRightEdges"
                                         FlowDirection="LeftToRight" Focusable="False">
                    <materialDesign:PopupBox.ToggleContent>
                        <StackPanel Orientation="Horizontal" Margin="12 0" Height="32">
                            <materialDesign:PackIcon Kind="Information" Width="20" Height="20" VerticalAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewInfo, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>

                            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Text="{Binding NewInfo}" FontSize="16" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NewInfo, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Foreground" Value="{StaticResource ColorSecondary}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </materialDesign:PopupBox.ToggleContent>
                    <!--//-->
                    <StackPanel Orientation="Vertical">
                        <ListView Width="480" MaxHeight="640" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                  ScrollViewer.CanContentScroll="True"
                                  ItemsSource="{Binding InfoSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.Resources>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="{StaticResource ColorInfo}"/>
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="1 0 1 1"/>
                                    <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                                </Style>    
                            </ListView.Resources>
                            <!--//-->
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn Header="Code" Width="120">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Code}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="360">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Description}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                                                           TextWrapping="Wrap" Foreground="{Binding MsgColor}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>    
                            </ListView.View>
                        </ListView>
                        <!--//-->
                        <Button x:Name="InfoClearBtn" Margin="0 12 0 0" HorizontalAlignment="Right" Click="InfoClearBtn_Click" Focusable="False"
                                Foreground="Gray" Style="{StaticResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Kind="TrashCan" Width="30" Height="26"/>
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
                <!--#endregion-->
            </StackPanel>
            <!--#endregion-->
        </Grid>
    </Border>
</Window>
